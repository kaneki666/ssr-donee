{"version":3,"sources":["utils/helperFunction.ts","utils/goal-model.ts","utils/formSchemas.ts","screen/Authentication/Components/BioInputField.tsx","screen/Authentication/utils/data.ts","screen/Authentication/Components/InputFieldProfile.tsx","screen/Authentication/Components/SelectFieldCountry.tsx","../node_modules/@material-ui/core/FormGroup/formGroupClasses.js","../node_modules/@material-ui/core/FormGroup/FormGroup.js","screen/Authentication/Components/CheckBoxFormik.tsx","screen/Authentication/Components/AlertNotification.tsx","assets/icons/imageadd.svg","screen/Authentication/Components/ImageField.tsx","../node_modules/@material-ui/core/FormControlLabel/formControlLabelClasses.js","../node_modules/@material-ui/core/FormControlLabel/FormControlLabel.js","screen/Authentication/Components/DonarInfoForm.tsx","screen/Authentication/Donor/CreateProfileDonor/index.tsx"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","sleepTimer","time","Promise","resolve","setTimeout","goalFormModel","formId","formField","goalname","name","label","requiredErrorMsg","minError","maxError","file","fileFormatError","fileMaxError","shortGoal","topics","product","productlink","productunitcost","productunitnumber","productsubtotal","productpgwfee","productngofee","productplatformfee","productgoaltotal","videofile","full_description","FILE_SIZE","SUPPORTED_FORMATS","SignUpValidaionSchema","yup","shape","email","required","password","min","when","is","val","length","then","not","confirmPassword","oneOf","LoginValidaionSchema","CreateProfileSchemaDonor","username","matches","full_name","country","phone_number","bio","max","image","test","value","size","includes","type","donee_notification","account_activity","donee_activity","achieved_goals","new_followers","NGO_role_assign","CreateProfileSchemaNgo","sdgs","certification_incorporation","map","item","CreateProfileSchemaDonee","id_front","id_back","SUPPORTED_FORMATS_VIDEO","validationSchemaGoal","BioInputFieldProfile","field","form","placeholder","touched","errors","id","multiline","rows","fullWidth","variant","InputLabelProps","shrink","helperText","renderHelperText","error","Boolean","textInputsInfoDonee","typeInputType","textInputsInfoNgo","textInputsInfoDonor","InputFieldProfile","margin","SelectFieldCountry","options","refError","useRef","axiosInstance","useAxios","get","res","status","setFieldValue","data","country_code","msg","current","handleCreateError","children","add","labelId","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","overridesResolver","props","styles","ownerState","root","row","_extends","display","flexDirection","flexWrap","FormGroup","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","CheckBoxFormik","sub","useStyles","boxPaddingAlert","FormControlLabel","control","Checkbox","color","checked","Typography","pTagStlAlert","align","gutterBottom","makeStyles","theme","createStyles","paddingTop","paddingBottom","saveButtonAlert","borderRadius","marginTop","paddingLeft","paddingRight","tagTitle","fontSize","AlertNotification","Container","Grid","container","spacing","alignItems","justifyContent","Box","component","ErrorText","ImageField","profile_type","ngoID","useSelector","state","AuthReducer","ngo_profile_id","result","setResult","URL","createObjectURL","Stack","direction","xs","m","src","alt","AddImage","onChange","event","currentTarget","files","toString","backgroundColor","getFormControlLabelUtilityClasses","formControlLabelClasses","FormControlLabelRoot","capitalize","labelPlacement","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","disabled","palette","text","componentsProps","disabledProp","disableTypography","muiFormControl","useFormControl","controlProps","forEach","key","_jsxs","typography","DonarInfoForm","accesstoken","userInfo","access","useQuery","a","response","isLoading","isError","ErrorCatchComponent","ApiErrorPage","Error","maxWidth","undefined","style","isMulti","Loader","renderStepContent","CreateProfile","refSuccess","navigate","useNavigate","dispatch","useDispatch","mutationCreate","useMutation","infoProfile","CREATE_PROFILEDONOR_API","isSuccess","steps","activeStep","setActiveStep","explode","setExplode","createProfileInitialValueDonor","initialValuesProfile","selectedValidationSchema","isLast","submitForm","values","actions","mutate","setSubmitting","handleCreateSucess","userInfoData","refresh","is_account_created","user_profile","user_id","saveUserInfoAction","saveLoginAction","replace","message","fallbackRender","resetErrorBoundary","PageErrorBoundary","onReset","resetKeys","RootContainerStyle","Stepper","step","index","Step","StepLabel","enableReinitialize","initialValues","validationSchema","onSubmit","prev","setTouched","formikProps","sx","Button","onClick","isSubmitting","CircularProgress","padding"],"mappings":"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","file":"static/js/22.534ac3c1.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst sleepTimer = (time: number) => {\n  return new Promise((resolve) => setTimeout(resolve, time));\n};\n\nexport { useWindowDimensions, sleepTimer };\n","import { GoalModelType } from \"./typeHelpers\";\n\nconst goalFormModel: GoalModelType = {\n  formId: \"createGoalForm\",\n  formField: {\n    goalname: {\n      name: \"goalname\",\n      label: \"Goal Name\",\n      requiredErrorMsg: \"Goal Name is required\",\n      minError: \"Too Short, 10 character minimum\",\n      maxError: \"Too long, 25 character max\",\n    },\n    file: {\n      name: \"file\",\n      label: \"Image File*\",\n      requiredErrorMsg: \"File is Required\",\n      fileFormatError: \"Unsupported Format\",\n      fileMaxError: \"File too large\",\n    },\n    shortGoal: {\n      name: \"shortGoal\",\n      label: \"Short Goal*\",\n      requiredErrorMsg: \"Short Goal is required\",\n      minError: \"Too Short, 30 character minimum\",\n      maxError: \"Too long, 150 character max\",\n    },\n    topics: {\n      name: \"topic\",\n      label: \"Choose topic of your goal*\",\n      requiredErrorMsg: \"Topic is required\",\n      minError: \"1 Topic is required minimum\",\n    },\n    product: {\n      name: \"product\",\n      label: \"What are you buying?\",\n      requiredErrorMsg: \"Product Name is required\",\n    },\n    productlink: {\n      name: \"productlink\",\n      label: \"Where do you get it? Paste a link\",\n      requiredErrorMsg: \"Product Link is required\",\n    },\n    productunitcost: {\n      name: \"unitcost\",\n      label: \"Unit Cost in Dollar\",\n      requiredErrorMsg: \"Unit cost is required\",\n      minError: \"Unit cost must be greater than 0\",\n    },\n    productunitnumber: {\n      name: \"unitnumber\",\n      label: \"How many units?\",\n      requiredErrorMsg: \"Unit is required\",\n      minError: \"Unit must be greater than 0\",\n    },\n    productsubtotal: {\n      name: \"productsubtotal\",\n      label: \"Sub Total\",\n      requiredErrorMsg: \"Sub Total is required\",\n    },\n    // productservicefee: {\n    //   name: \"productservicefee\",\n    //   label: \"Service fee 10%\",\n    //   requiredErrorMsg: \"Service fee is required\",\n    // },\n\n    productpgwfee: {\n      name: \"productpgwfee\",\n      label: \"PGW fee\",\n      requiredErrorMsg: \"product pgw fee is required\",\n    },\n    productngofee: {\n      name: \"productngofee\",\n      label: \"NGO fee\",\n      requiredErrorMsg: \"product ngo fee is required\",\n    },\n    productplatformfee: {\n      name: \"productplatformfee\",\n      label: \"Platform fee\",\n      requiredErrorMsg: \"product platform fee is required\",\n    },\n\n    productgoaltotal: {\n      name: \"productgoaltotal\",\n      label: \"Total Goal Cost\",\n      requiredErrorMsg: \"Total Goal is required\",\n    },\n    videofile: {\n      name: \"videofile\",\n      label: \"Video\",\n      requiredErrorMsg: \"Video is Required\",\n      fileFormatError: \"'Unsupported Format'\",\n      fileMaxError: \"Video too large,less than 100 MB\",\n    },\n    full_description: {\n      name: \"full_description\",\n      label: \"Full Description\",\n      requiredErrorMsg: \"Full description is required\",\n      minError: \"100 character minimum\",\n    },\n  },\n};\n\nexport { goalFormModel };\n","import * as yup from \"yup\";\nimport { goalFormModel } from \"./goal-model\";\nconst FILE_SIZE = 5 * 1000000;\nconst VIDEO_SIZE = 250 * 1000000;\nconst SUPPORTED_FORMATS = [\n  \"image/jpg\",\n  \"image/jpeg\",\n  \"image/gif\",\n  \"image/png\",\n  \"image/PNG\",\n  \"image/webp\",\n  \"image/svg\",\n];\n\nconst SignUpValidaionSchema = yup.object().shape({\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup\n    .string()\n    .required(\"Password is required\")\n    .min(6, \"Minimum 6 Characters\")\n    .when(\"email\", {\n      is: (val: string) => (val && val.length > 6 ? true : false),\n      then: yup.string().not([yup.ref(\"email\")], \"Password can not be email\"),\n    }),\n  confirmPassword: yup.string().when(\"password\", {\n    is: (val: string) => (val && val.length > 0 ? true : false),\n    then: yup\n      .string()\n      .oneOf([yup.ref(\"password\")], \"Both password need to be the same\"),\n  }),\n});\n\nconst LoginValidaionSchema = yup.object().shape({\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup\n    .string()\n    .required(\"Password is required\")\n    .min(6, \"Minimum 6 Characters\")\n    .when(\"email\", {\n      is: (val: string) => (val && val.length > 6 ? true : false),\n      then: yup.string().not([yup.ref(\"email\")], \"Password can not be email\"),\n    }),\n});\n\nconst CreateProfileSchemaDonor = [\n  yup.object().shape({\n    username: yup\n      .string()\n      .matches(/^(\\S+$)/, \"This field cannot contain  blankspaces\")\n      .required(\"Field is required\")\n      .min(6, \"Minimum 6 Charachters\"),\n    full_name: yup\n      .string()\n      .required(\"Field is required\")\n      .when(\"username\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup\n          .string()\n          .not([yup.ref(\"username\")], \"Full name can not be username\"),\n      }),\n    country: yup.number().required(\"Country is required\"),\n    phone_number: yup\n      .string()\n      .matches(/^(\\+)[0-9]{7,16}$/, \"Enter correct number!\")\n      .required(\"Phone number is required\"),\n\n    bio: yup\n      .string()\n      .required(\"Bio is required\")\n      .max(100, \"Maximum 100 Charachters\")\n      .when(\"username\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup\n          .string()\n          .not([yup.ref(\"username\")], \"Bio name can not be username\"),\n      }),\n    image: yup\n      .mixed()\n      .required(\"Profile Image is required\")\n      .test(\n        \"fileSize\",\n        \"Maximum Size 5MB\",\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Invalid Image\",\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n  }),\n  yup.object().shape({\n    donee_notification: yup\n      .boolean()\n      .required(\"donee_notification is required\"),\n    account_activity: yup.boolean().required(\"account_activity is required\"),\n    donee_activity: yup.boolean().required(\"donee_activity is required\"),\n    achieved_goals: yup.boolean().required(\"achieved_goals is required\"),\n    new_followers: yup.boolean().required(\"new_followers is required\"),\n    NGO_role_assign: yup.boolean().required(\"user_notification is required\"),\n  }),\n];\nconst CreateProfileSchemaNgo = [\n  yup.object().shape({\n    username: yup\n      .string()\n      .matches(/^(\\S+$)/, \"This field cannot contain  blankspaces\")\n      .required(\"Field is required\")\n      .min(6, \"Minimum 6 Charachters\"),\n    full_name: yup\n      .string()\n      .required(\"Field is required\")\n      .when(\"username\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup\n          .string()\n          .not([yup.ref(\"username\")], \"Full name can not be username\"),\n      }),\n    email: yup.string().email().required(\"Email is required\"),\n    country: yup\n      .number()\n      .required(\"Country is required\")\n      .min(1, \"Minimum 1 Charachters\"),\n    phone_number: yup\n      .string()\n      .matches(/^(\\+)[0-9]{7,16}$/, \"Enter correct number!\")\n      .required(\"Phone number is required\"),\n    bio: yup\n      .string()\n      .required(\"Bio is required\")\n      .max(100, \"Maximum 100 Charachters\")\n      .when(\"email\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup.string().not([yup.ref(\"email\")], \"Bio name can not be email\"),\n      }),\n    image: yup\n      .mixed()\n      .required(\"Profile Image is required\")\n      .test(\n        \"fileSize\",\n        \"Maximum Size 5MB\",\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Invalid Image\",\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n    sdgs: yup\n      .array()\n      .required(\"SDGS is Required\")\n      .min(1, \"Minimum 1 is Required\"),\n  }),\n  yup.object().shape({\n    donee_notification: yup\n      .boolean()\n      .required(\"donee_notification is required\"),\n    account_activity: yup.boolean().required(\"account_activity is required\"),\n    donee_activity: yup.boolean().required(\"donee_activity is required\"),\n    achieved_goals: yup.boolean().required(\"achieved_goals is required\"),\n    new_followers: yup.boolean().required(\"new_followers is required\"),\n    NGO_role_assign: yup.boolean().required(\"user_notification is required\"),\n  }),\n  ,\n  yup.object().shape({\n    certification_incorporation: yup\n      .array(\n        yup\n          .mixed()\n          .required(\"Certification incorporation Images is required\")\n          .test(\"fileSize\", \"Maximum Size 5MB\", (value) =>\n            value.map((item: any) => item && item.size <= FILE_SIZE)\n          )\n          .test(\n            \"fileFormat\",\n            \"Invalid Image\",\n            (value) => value && SUPPORTED_FORMATS.includes(value.type)\n          )\n      )\n      .min(1, \"1 file is minimum\"),\n  }),\n];\n\nconst CreateProfileSchemaDonee = [\n  yup.object().shape({\n    username: yup\n      .string()\n      .matches(/^(\\S+$)/, \"This field cannot contain  blankspaces\")\n      .required(\"Field is required\")\n      .min(6, \"Minimum 6 Charachters\"),\n    full_name: yup\n      .string()\n      .required(\"Field is required\")\n      .when(\"username\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup\n          .string()\n          .not([yup.ref(\"username\")], \"Full name can not be username\"),\n      }),\n    email: yup.string().email().required(\"Email is required\"),\n    country: yup\n      .number()\n      .required(\"Country is required\")\n      .min(1, \"Minimum 1 Charachters\"),\n    phone_number: yup\n      .string()\n      .matches(/^(\\+)[0-9]{7,16}$/, \"Enter correct number!\")\n      .required(\"Phone number is required\"),\n    bio: yup\n      .string()\n      .required(\"Bio is required\")\n      .max(100, \"Maximum 100 Charachters\")\n      .when(\"email\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup.string().not([yup.ref(\"email\")], \"Bio name can not be email\"),\n      }),\n    image: yup\n      .mixed()\n      .required(\"Profile Image is required\")\n      .test(\n        \"fileSize\",\n        \"Maximum Size 5MB\",\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Invalid Image\",\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n    sdgs: yup\n      .array()\n      .required(\"SDGS is Required\")\n      .min(1, \"Minimum 1 is Required\"),\n  }),\n  yup.object().shape({\n    donee_notification: yup\n      .boolean()\n      .required(\"donee_notification is required\"),\n    account_activity: yup.boolean().required(\"account_activity is required\"),\n    donee_activity: yup.boolean().required(\"donee_activity is required\"),\n    achieved_goals: yup.boolean().required(\"achieved_goals is required\"),\n    new_followers: yup.boolean().required(\"new_followers is required\"),\n    NGO_role_assign: yup.boolean().required(\"user_notification is required\"),\n  }),\n\n  yup.object().shape({\n    id_front: yup\n      .mixed()\n      .required(\"ID front Image is required\")\n      .test(\n        \"fileSize\",\n        \"Maximum Size 5MB\",\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Invalid Image\",\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n    id_back: yup\n      .mixed()\n      .required(\"ID back Image is required\")\n      .test(\n        \"fileSize\",\n        \"Maximum Size 5MB\",\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Invalid Image\",\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n  }),\n];\n\nconst {\n  formField: {\n    file,\n    goalname,\n    shortGoal,\n    topics,\n    product,\n    productlink,\n    productunitcost,\n    productunitnumber,\n    productsubtotal,\n    // productservicefee,\n\n    productpgwfee,\n    productngofee,\n    productplatformfee,\n\n    productgoaltotal,\n    videofile,\n    full_description,\n  },\n} = goalFormModel;\n\nconst SUPPORTED_FORMATS_VIDEO = [\"video/mp4\", \"video/mov\"];\nconst validationSchemaGoal = [\n  yup.object().shape({\n    [file.name]: yup\n      .mixed()\n      .required(file.requiredErrorMsg)\n      .test(\n        \"fileSize\",\n        file.fileMaxError,\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        file.fileFormatError,\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n    [goalname.name]: yup\n      .string()\n      .required(goalname.requiredErrorMsg)\n      .min(10, goalname.minError)\n      .max(25, goalname.maxError),\n    [shortGoal.name]: yup.string().required(shortGoal.requiredErrorMsg),\n    [topics.name]: yup\n      .array()\n      .required(topics.requiredErrorMsg)\n      .min(1, topics.minError),\n  }),\n  yup.object().shape({\n    [product.name]: yup.string().required(product.requiredErrorMsg),\n    [productlink.name]: yup\n      .string()\n      .matches(\n        /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/,\n        \"Enter correct url!\"\n      ),\n    [productunitcost.name]: yup\n      .number()\n      .min(1, productunitcost.minError)\n      .required(productunitcost.requiredErrorMsg),\n    [productunitnumber.name]: yup\n      .number()\n      .min(1, productunitnumber.minError)\n      .required(productunitnumber.requiredErrorMsg),\n    [productsubtotal.name]: yup\n      .number()\n      .required(productsubtotal.requiredErrorMsg),\n    // [productservicefee.name]: yup\n    //   .number()\n    //   .required(productservicefee.requiredErrorMsg),\n\n    [productpgwfee.name]: yup.number().required(productpgwfee.requiredErrorMsg),\n\n    [productngofee.name]: yup.number().required(productngofee.requiredErrorMsg),\n\n    [productplatformfee.name]: yup\n      .number()\n      .required(productplatformfee.requiredErrorMsg),\n\n    [productgoaltotal.name]: yup\n      .number()\n      .required(productgoaltotal.requiredErrorMsg),\n  }),\n  yup.object().shape({\n    [videofile.name]: yup\n      .array(\n        yup\n          .mixed()\n          .required(videofile.requiredErrorMsg)\n          .test(\n            \"fileSize\",\n            videofile.fileMaxError,\n            (value) => value && value.size <= VIDEO_SIZE\n          )\n          .test(\n            \"fileFormat\",\n            videofile.fileFormatError,\n            (value) => value && SUPPORTED_FORMATS_VIDEO.includes(value.type)\n          )\n      )\n      .min(1, \"1 video is minimum\"),\n    [full_description.name]: yup\n      .string()\n      .required(full_description.requiredErrorMsg),\n  }),\n];\n\nexport {\n  SignUpValidaionSchema,\n  LoginValidaionSchema,\n  CreateProfileSchemaDonor,\n  CreateProfileSchemaNgo,\n  CreateProfileSchemaDonee,\n  validationSchemaGoal,\n};\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { FieldProps } from \"formik\";\r\n\r\ninterface CustomInputFieldProps extends FieldProps {\r\n  name?: string;\r\n  label?: string;\r\n  type?: string;\r\n  placeholder: string;\r\n}\r\n\r\nconst BioInputFieldProfile = ({\r\n  field,\r\n  form,\r\n  label,\r\n  type,\r\n  placeholder,\r\n}: CustomInputFieldProps) => {\r\n  const { touched, errors } = form;\r\n  const renderHelperText = () => {\r\n    if (touched[field.name] && errors[field.name]) {\r\n      return errors[field.name];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      id={`outlined-full-width Bio`}\r\n      multiline\r\n      rows={4}\r\n      fullWidth\r\n      variant=\"outlined\"\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      helperText={renderHelperText()}\r\n      error={Boolean(touched[field.name] && errors[field.name])}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BioInputFieldProfile;\r\n","import { inputType } from \"../../../utils/typeHelpers\";\n\nconst textInputsInfoDonee: Array<inputType> = [\n  {\n    name: \"username\",\n    label: \" Donee Username \",\n    placeholder: \"Enter Your Unique username\",\n    typeInputType: \"text\",\n  },\n  {\n    name: \"full_name\",\n    label: \"Donee  Name\",\n    placeholder: \"Enter  Name\",\n    typeInputType: \"text\",\n  },\n  {\n    name: \"email\",\n    label: \"E-Mail\",\n    placeholder: \"Enter Your Email\",\n    typeInputType: \"text\",\n  },\n  {\n    name: \"country\",\n    label: \"Location\",\n    placeholder: \"Enter Your Location\",\n    typeInputType: \"text\",\n  },\n  {\n    name: \"phone_number\",\n    label: \"Phone Number\",\n    placeholder: \"Enter Phone Number with Country Code\",\n    typeInputType: \"number\",\n  },\n];\n\nconst textInputsInfoNgo: Array<inputType> = [\n  {\n    name: \"username\",\n    label: \" NGO Username \",\n    placeholder: \"Enter Your Unique username\",\n    typeInputType: \"text\",\n  },\n  {\n    name: \"full_name\",\n    label: \"NGO Commercial Name\",\n    placeholder: \"Enter Commercial Name\",\n    typeInputType: \"text\",\n  },\n  {\n    name: \"email\",\n    label: \"E-Mail\",\n    placeholder: \"Enter Your Email\",\n    typeInputType: \"text\",\n  },\n  {\n    name: \"country\",\n    label: \"Location\",\n    placeholder: \"Enter Your Location\",\n    typeInputType: \"text\",\n  },\n  {\n    name: \"phone_number\",\n    label: \"Phone Number\",\n    placeholder: \"Enter Phone Number with Country Code\",\n    typeInputType: \"number\",\n  },\n];\n\nconst textInputsInfoDonor: Array<inputType> = [\n  {\n    name: \"username\",\n    label: \"Username \",\n    placeholder: \"Enter Your Unique username\",\n    typeInputType: \"text\",\n  },\n  {\n    name: \"full_name\",\n    label: \"Donor Name\",\n    placeholder: \"Enter Your Full Name\",\n    typeInputType: \"text\",\n  },\n  {\n    name: \"country\",\n    label: \"Location\",\n    placeholder: \"Enter Your Location\",\n    typeInputType: \"text\",\n  },\n\n  {\n    name: \"phone_number\",\n    label: \"Phone Number\",\n    placeholder: \"Enter Phone Number with Country Code\",\n    typeInputType: \"number\",\n  },\n];\n\nconst textInputsPasswordsDonor: Array<inputType> = [\n  {\n    name: \"password\",\n    label: \"Password\",\n    placeholder: \"Enter Your Password\",\n    typeInputType: \"password\",\n  },\n  {\n    name: \"confirmPassword\",\n    label: \"Confirm password\",\n    placeholder: \"Enter Your Password Again\",\n    typeInputType: \"password\",\n  },\n];\n\nexport {\n  textInputsInfoDonee,\n  textInputsInfoNgo,\n  textInputsPasswordsDonor,\n  textInputsInfoDonor,\n};\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { FieldProps } from \"formik\";\r\n\r\ninterface CustomInputFieldProps extends FieldProps {\r\n  name?: string;\r\n  label?: string;\r\n  type?: string;\r\n  placeholder: string;\r\n}\r\n\r\nconst InputFieldProfile = ({\r\n  field,\r\n  form,\r\n  label,\r\n  type,\r\n  placeholder,\r\n}: CustomInputFieldProps) => {\r\n  const { touched, errors } = form;\r\n  const renderHelperText = () => {\r\n    if (touched[field.name] && errors[field.name]) {\r\n      return errors[field.name];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      id={`outlined-full-width ${field.name}`}\r\n      fullWidth\r\n      margin=\"normal\"\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      variant=\"outlined\"\r\n      placeholder={placeholder}\r\n      type={type}\r\n      helperText={renderHelperText()}\r\n      error={Boolean(touched[field.name] && errors[field.name])}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputFieldProfile;\r\n","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { FieldProps } from \"formik\";\nimport React, { useEffect,useRef } from \"react\";\nimport { CountryType, AddFunction } from \"../../../utils/typeHelpers\";\nimport useAxios from \"../../../utils/useAxios\";\n\nimport { MessageSuccess } from \"../../../components/AlertMessageSuccess\";\nimport { MessageError } from \"../../../components/AlertMessageError\";\n\ninterface CustomSelectProps extends FieldProps {\n  options: CountryType[];\n  isMulti?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nconst SelectFieldCountry = ({ field, options, form }: CustomSelectProps) => {\n  const refError = useRef<null | AddFunction>(null);\n  const handleCreateError = (msg:any) => {\n    refError.current?.(msg);\n  };\n\n\n  const axiosInstance = useAxios();\n  useEffect(() => {\n    axiosInstance.get(`country-code/${field.value}`).then((res) => {\n      if (res.status === 200) {\n        form.setFieldValue(\"phone_number\", `+${res.data.country_code}`);\n      } else {\n        handleCreateError(\"Api Status not ok!\");\n      }\n    });\n  }, [field.value]);\n  return (\n    <FormControl fullWidth>\n\n      <MessageError\n          children={(add: AddFunction) => {\n            refError.current = add;\n          }}\n        />\n\n      <InputLabel id=\"demo-simple-select-label\">Where are you from?</InputLabel>\n      {options !== null && (\n        <Select\n          labelId=\"demo-simple-select-label\"\n          label=\"Select Your Country\"\n          id=\"demo-simple-select\"\n          {...field}\n          fullWidth\n        >\n          {options.map((item) => (\n            <MenuItem value={item.id}>{item.name}</MenuItem>\n          ))}\n        </Select>\n      )}\n    </FormControl>\n  );\n};\n\nexport default SelectFieldCountry;\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  const {\n    className,\n    row = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    row\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormGroup;","import { Checkbox, FormControlLabel, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { FieldProps } from \"formik\";\nimport { Box } from \"@material-ui/system\";\nimport { useStyles } from \"./AlertNotification\";\n\ninterface CheckBoxFormik extends FieldProps {\n  label?: string;\n  sub: string;\n}\nconst CheckBoxFormik = ({ field, form, label, sub }: CheckBoxFormik) => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.boxPaddingAlert}>\n      <FormControlLabel\n        control={<Checkbox {...field} color=\"primary\" checked={field.value} />}\n        label={label}\n      />\n      <Typography className={classes.pTagStlAlert} align=\"left\" gutterBottom>\n        {sub}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default CheckBoxFormik;\n","import React from \"react\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport { Grid, Typography, Container, Box, FormGroup } from \"@material-ui/core\";\n\nimport { makeStyles, createStyles } from \"@material-ui/styles\";\nimport { Field } from \"formik\";\n\nimport CheckBoxFormik from \"./CheckBoxFormik\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    boxPaddingAlert: {\n      paddingTop: 8,\n      paddingBottom: 8,\n    },\n    saveButtonAlert: {\n      borderRadius: 20,\n      marginTop: 20,\n      paddingTop: 10,\n      paddingLeft: 25,\n      paddingRight: 25,\n      paddingBottom: 10,\n    },\n    tagTitle: {\n      paddingTop: 25,\n      paddingBottom: 20,\n    },\n    pTagStlAlert: {\n      fontSize: 14,\n      color: \"grey\",\n    },\n  })\n);\n\nexport default function AlertNotification() {\n  const classes = useStyles();\n\n  return (\n    // <div className={classes.root}>\n    // </div>\n    <Container>\n      <Grid container spacing={3} alignItems=\"center\" justifyContent=\"center\">\n        <Grid item>\n          <Typography\n            className={classes.tagTitle}\n            variant=\"h4\"\n            align=\"left\"\n            gutterBottom\n          >\n            Alert and Notification\n          </Typography>\n\n          <Box>\n            <Typography variant=\"h5\" align=\"left\" gutterBottom>\n              Send me:\n            </Typography>\n\n            <FormGroup>\n              <Field\n                component={CheckBoxFormik}\n                label=\"Donee notifications\"\n                name=\"account_activity\"\n                sub=\"Get Donee news, everything about our new goals, donees and\n                  NGO's\"\n              />\n              <Field\n                component={CheckBoxFormik}\n                label=\"Account activity\"\n                name=\"donee_notification\"\n                sub=\"Get notifications about your activity or activities you´ve\n                missed\"\n              />\n\n              <Field\n                component={CheckBoxFormik}\n                label=\"Activity of your endorsed Donee´s\"\n                name=\"donee_activity\"\n                sub=\" Get notifications about your sponsored Donee´s and everything\n                about their goals progress\"\n              />\n              <Field\n                component={CheckBoxFormik}\n                label=\"Goals achieved that you support\"\n                name=\"achieved_goals\"\n                sub=\"\"\n              />\n\n              <Field\n                component={CheckBoxFormik}\n                label=\"Goals achieved that you endorsed\"\n                name=\"new_followers\"\n                sub=\"\"\n              />\n              <Field\n                component={CheckBoxFormik}\n                label=\"Someone gave you a role in their NGO\"\n                name=\"NGO_role_assign\"\n                sub=\"\"\n              />\n            </FormGroup>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/imageadd.336df693.svg\";","import React, { useEffect } from \"react\";\r\nimport { FieldProps } from \"formik\";\r\nimport { styled } from \"@material-ui/styles\";\r\nimport { Stack, Typography, Box, Grid } from \"@material-ui/core\";\r\n\r\nimport AddImage from \"../../../assets/icons/imageadd.svg\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootAppState } from \"../../../utils/typeHelpers\";\r\n\r\ninterface ImageFieldProps extends FieldProps {\r\n  imagepath?: string | null | undefined;\r\n  profile_type: string;\r\n}\r\n\r\nconst ImageField = ({ field, form, profile_type }: ImageFieldProps) => {\r\n  const { errors } = form;\r\n  const ngoID = useSelector(\r\n    (state: RootAppState) => state.AuthReducer.ngo_profile_id\r\n  );\r\n  const [result, setResult] = React.useState<string | null | undefined>(null);\r\n  useEffect(() => {\r\n    if (field.value) {\r\n      setResult(URL.createObjectURL(field.value));\r\n    }\r\n  }, [field.value]);\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={1}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={6}>\r\n          <Box component=\"span\" m={1} className=\"ovalImage\">\r\n            {result !== null ? (\r\n              <img className=\"ovalImage\" src={result} alt=\"logoaddimage\" />\r\n            ) : (\r\n              <img className=\"addimageicon\" src={AddImage} alt=\"logoaddimage\" />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          xs={6}\r\n        >\r\n          <input\r\n            id=\"file\"\r\n            name=\"file\"\r\n            type=\"file\"\r\n            onChange={(event: any) => {\r\n              form.setFieldValue(\"image\", event.currentTarget.files[0]);\r\n\r\n              form.setFieldValue(\"profile_type\", profile_type);\r\n              if (ngoID !== null) {\r\n                form.setFieldValue(\"ngo_profile_id\", ngoID.toString());\r\n              }\r\n            }}\r\n          />\r\n          <Typography variant=\"subtitle1\" className=\"filesizelabel\">\r\n            JPG, GIF or PNG.\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {errors[field.name] && (\r\n        <ErrorText variant=\"body1\">{errors[field.name]}</ErrorText>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ImageField;\r\n\r\nconst BoxImage = styled(Box)({\r\n  backgroundColor: \"#CED4DA\",\r\n  width: 150,\r\n  height: 150,\r\n  borderRadius: 11,\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  display: \"flex\",\r\n});\r\nconst ErrorText = styled(Typography)({\r\n  color: \"red\",\r\n  fontSize: 12,\r\n});\r\nconst ProdImage = styled(\"img\")({\r\n  height: 120,\r\n  width: 80,\r\n});\r\n","import { generateUtilityClasses, generateUtilityClass } from '@material-ui/unstyled';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: theme.palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    label,\n    labelPlacement\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label.type === Typography || disableTypography ? label : /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { Typography, Container } from \"@material-ui/core\";\r\nimport { Field } from \"formik\";\r\nimport React from \"react\";\r\nimport { useQuery, UseQueryResult } from \"react-query\";\r\nimport { useSelector } from \"react-redux\";\r\n// import { GET_COUNTRIES_API } from \"../../../utils/Api\";\r\nimport { SdgsType, inputType, RootAppState } from \"../../../utils/typeHelpers\";\r\nimport { textInputsInfoDonor } from \"../utils/data\";\r\n\r\nimport BioInputFieldProfile from \"./BioInputField\";\r\nimport ImageField from \"./ImageField\";\r\nimport InputFieldProfile from \"./InputFieldProfile\";\r\nimport SelectFieldCountry from \"./SelectFieldCountry\";\r\nimport useAxios from \"../../../utils/useAxios\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport ErrorCatchComponent from \"../../../components/ErrorCatchComponent\";\r\nimport ApiErrorPage from \"../../Errror/ApiErrorPage\";\r\n\r\ninterface DonorFormType {\r\n  label: string;\r\n}\r\n\r\nconst DonarInfoForm = ({ label }: DonorFormType) => {\r\n  const accesstoken = useSelector(\r\n    (state: RootAppState) => state.AuthReducer.userInfo.access\r\n  );\r\n\r\n  const axiosInstance = useAxios();\r\n  const {\r\n    data: options,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n  }: UseQueryResult<SdgsType[], Error> = useQuery(\r\n    [\"getCountries\", accesstoken],\r\n    async () => {\r\n      const response = await axiosInstance.get(`/country-list/`);\r\n\r\n      return response.data;\r\n    }\r\n  );\r\n\r\n  return (\r\n    <ErrorCatchComponent>\r\n      {isLoading === false ? (\r\n        <div>\r\n          {isError ? (\r\n            <ApiErrorPage\r\n              error={error ? error : new Error(\"Network response was not ok.\")}\r\n            />\r\n          ) : (\r\n            <Container maxWidth=\"sm\">\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                {label}\r\n              </Typography>\r\n              <Field name=\"image\" component={ImageField} type=\"input\" />\r\n\r\n              {options !== undefined &&\r\n                textInputsInfoDonor.map((item: inputType) =>\r\n                  item.label === \"Location\" ? (\r\n                    <div style={{ margin: 5 }}>\r\n                      {options && (\r\n                        <Field\r\n                          name={item.name}\r\n                          options={options}\r\n                          component={SelectFieldCountry}\r\n                          placeholder=\"Select your country\"\r\n                          isMulti={false}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    <div style={{ margin: 5 }}>\r\n                      <Field\r\n                        name={item.name}\r\n                        component={InputFieldProfile}\r\n                        label={item.label}\r\n                        placeholder={item.placeholder}\r\n                        type={item.placeholder}\r\n                      />\r\n                    </div>\r\n                  )\r\n                )}\r\n              <div style={{ margin: 5 }}>\r\n                <Field\r\n                  name=\"bio\"\r\n                  component={BioInputFieldProfile}\r\n                  label=\"Bio\"\r\n                  placeholder=\"Enter Your Info\"\r\n                />\r\n              </div>\r\n            </Container>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </ErrorCatchComponent>\r\n  );\r\n};\r\n\r\nexport default DonarInfoForm;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Stack,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n} from \"@material-ui/core\";\r\nimport { styled } from \"@material-ui/styles\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { Box } from \"@material-ui/system\";\r\nimport { useMutation, UseMutationResult } from \"react-query\";\r\n\r\nimport {\r\n  AddFunction,\r\n  CreateProfileResponse,\r\n  CreateProfileTypeDonor,\r\n  ILoginResponse,\r\n  RootAppState,\r\n} from \"../../../../utils/typeHelpers\";\r\nimport { CreateProfileSchemaDonor } from \"../../../../utils/formSchemas\";\r\nimport { CREATE_PROFILEDONOR_API } from \"../../../../utils/Api\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport PageErrorBoundary from \"../../../Errror/PageErrorBoundary\";\r\nimport { saveUserInfoAction } from \"../../../../redux/actions/saveUserInfoAction\";\r\nimport { createProfileInitialValueDonor } from \"../../../../utils/initialvalues\";\r\n\r\nimport AlertNotification from \"../../Components/AlertNotification\";\r\nimport DonarInfoForm from \"../../Components/DonarInfoForm\";\r\nimport { sleepTimer } from \"../../../../utils/helperFunction\";\r\nimport { MessageError } from \"../../../../components/AlertMessageError\";\r\nimport { MessageSuccess } from \"../../../../components/AlertMessageSuccess\";\r\nimport { saveLoginAction } from \"../../../../redux/actions/loginAction\";\r\n\r\nconst CreateProfile = () => {\r\n  const refError = useRef<null | AddFunction>(null);\r\n  const refSuccess = useRef<null | AddFunction>(null);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const userInfo = useSelector(\r\n    (state: RootAppState) => state.AuthReducer.userInfo\r\n  );\r\n\r\n  const ngo_profile_id = useSelector(\r\n    (state: RootAppState) => state.AuthReducer.ngo_profile_id\r\n  );\r\n\r\n  //api mutation\r\n  const mutationCreate: UseMutationResult<\r\n    CreateProfileResponse,\r\n    Error,\r\n    CreateProfileTypeDonor\r\n  > = useMutation((infoProfile: CreateProfileTypeDonor) =>\r\n    CREATE_PROFILEDONOR_API(infoProfile, userInfo.access)\r\n  );\r\n\r\n  //variables\r\n  const { isError, error, isSuccess, data } = mutationCreate;\r\n\r\n  const steps = [\"Basic Info\", \"Notifications\"];\r\n  let [activeStep, setActiveStep] = useState(0);\r\n  const [explode, setExplode] = useState(false);\r\n  const label = \"Create Profile Donor\";\r\n\r\n  const [initialValuesProfile, setInitialValuesProfile] =\r\n    useState<CreateProfileTypeDonor>({\r\n      ...createProfileInitialValueDonor,\r\n    });\r\n\r\n  const selectedValidationSchema = CreateProfileSchemaDonor[activeStep];\r\n  const isLast = activeStep === steps.length - 1;\r\n\r\n  //submitform\r\n  const submitForm = async (\r\n    values: CreateProfileTypeDonor,\r\n    actions: FormikHelpers<CreateProfileTypeDonor>\r\n  ) => {\r\n    await sleepTimer(200);\r\n\r\n    mutationCreate.mutate(values);\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  //change step and validate fields of form\r\n  const handleSubmit = (\r\n    values: CreateProfileTypeDonor,\r\n    actions: FormikHelpers<CreateProfileTypeDonor>\r\n  ) => {\r\n    if (isLast) {\r\n      submitForm(values, actions);\r\n    } else {\r\n      setActiveStep((prev) => prev + 1);\r\n      actions.setTouched({});\r\n      actions.setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateError = (msg: string) => {\r\n    refError.current?.(msg);\r\n  };\r\n\r\n  const handleCreateSucess = (msg: string) => {\r\n    refSuccess.current?.(msg);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      if (data !== undefined) {\r\n        if (typeof data.full_name === \"string\") {\r\n          handleCreateSucess(\"Profile Create Succesfull\");\r\n\r\n          const userInfoData: ILoginResponse = {\r\n            refresh: userInfo.refresh,\r\n            access: userInfo.access,\r\n            is_account_created: true,\r\n            user_profile: null,\r\n            user_id: userInfo.user_id,\r\n          };\r\n\r\n          setTimeout(() => {\r\n            if (ngo_profile_id !== \"\") {\r\n              dispatch(saveUserInfoAction(userInfoData));\r\n              dispatch(saveLoginAction(true));\r\n              navigate(\"../createprofiledonee\");\r\n            } else {\r\n              dispatch(saveUserInfoAction(userInfoData));\r\n              dispatch(saveLoginAction(true));\r\n              navigate(\"../\", { replace: true });\r\n            }\r\n          }, 5000);\r\n        } else {\r\n          const datas = data as any;\r\n          const msg: any = datas[0];\r\n          handleCreateError(msg);\r\n        }\r\n      }\r\n    } else if (isError) {\r\n      throw new Error(error?.message);\r\n    }\r\n  }, [isError, isSuccess]);\r\n\r\n  return (\r\n    <ErrorBoundary\r\n      fallbackRender={({ error, resetErrorBoundary }) => (\r\n        <PageErrorBoundary\r\n          error={error}\r\n          resetErrorBoundary={resetErrorBoundary}\r\n        />\r\n      )}\r\n      onReset={() => setExplode(false)}\r\n      resetKeys={[explode]}\r\n    >\r\n      <RootContainerStyle>\r\n        <MessageError\r\n          children={(add: AddFunction) => {\r\n            refError.current = add;\r\n          }}\r\n        />\r\n        <MessageSuccess\r\n          children={(add: AddFunction) => {\r\n            refSuccess.current = add;\r\n          }}\r\n        />\r\n        <Stepper activeStep={activeStep}>\r\n          {steps.map((step, index) => {\r\n            return (\r\n              <Step key={step}>\r\n                <StepLabel>{step}</StepLabel>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialValuesProfile}\r\n          validationSchema={selectedValidationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {(formikProps) => (\r\n            <Form>\r\n              <Stack spacing={2}>\r\n                {renderStepContent(activeStep, label)}\r\n                <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                  {activeStep > 0 && (\r\n                    <Button onClick={() => setActiveStep((prev) => prev - 1)}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={formikProps.isSubmitting}\r\n                  >\r\n                    {isLast ? \"Create Profile\" : \"Next\"}\r\n                  </Button>\r\n                  {formikProps.isSubmitting && <CircularProgress />}\r\n                </Box>\r\n              </Stack>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </RootContainerStyle>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default CreateProfile;\r\n\r\nexport const renderStepContent = (step: number, label: string) => {\r\n  switch (step) {\r\n    case 0:\r\n      return <DonarInfoForm label={label} />;\r\n\r\n    case 1:\r\n      return <AlertNotification />;\r\n  }\r\n};\r\n\r\nconst RootContainerStyle = styled(\"div\")({\r\n  padding: 10,\r\n});\r\n"],"sourceRoot":""}