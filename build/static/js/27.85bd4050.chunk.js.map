{"version":3,"sources":["utils/helperFunction.ts","utils/goal-model.ts","utils/formSchemas.ts","components/RootStyle.ts","assets/icons/doneelogo.svg","assets/cards/login_bg.jpeg","screen/Authentication/RegsiterUser/Components/styles.ts","screen/Authentication/RegsiterUser/Components/LeftContainer.tsx","components/TabPanel.tsx","screen/Authentication/RegsiterUser/Components/TextFIeldRegister.tsx","assets/icons/fbbutton.png","assets/icons/gobutton.png","screen/Authentication/RegsiterUser/Components/LoginContainer.tsx","screen/Authentication/RegsiterUser/Components/RightContainer.tsx","screen/Authentication/RegsiterUser/Components/RegisterContainer.tsx","screen/Authentication/RegsiterUser/index.tsx"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","sleepTimer","time","Promise","resolve","setTimeout","goalFormModel","formId","formField","goalname","name","label","requiredErrorMsg","minError","maxError","file","fileFormatError","fileMaxError","shortGoal","topics","product","productlink","productunitcost","productunitnumber","productsubtotal","productpgwfee","productngofee","productplatformfee","productgoaltotal","videofile","full_description","FILE_SIZE","SUPPORTED_FORMATS","SignUpValidaionSchema","yup","shape","email","required","password","min","when","is","val","length","then","not","confirmPassword","oneOf","LoginValidaionSchema","CreateProfileSchemaDonor","username","matches","full_name","country","phone_number","bio","max","image","test","value","size","includes","type","donee_notification","account_activity","donee_activity","achieved_goals","new_followers","NGO_role_assign","CreateProfileSchemaNgo","sdgs","certification_incorporation","map","item","CreateProfileSchemaDonee","id_front","id_back","SUPPORTED_FORMATS_VIDEO","validationSchemaGoal","RootStyle","styled","display","minHeight","overflow","backgroundColor","useStylesSignup","makeStyles","theme","root","backgroundImage","Background","backgroundRepeat","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","flexDirection","alignItems","avatar","secondary","main","form","marginTop","submit","maxWidth","TextField","borderRadius","input","color","RootSubTitle","Typography","fontWeight","fontSize","LeftContainer","classes","Grid","xs","sm","md","className","sx","padding","src","DoneLogo","alt","style","paddingTop","TabPanel","props","children","index","other","role","hidden","id","p","TextFieldRegister","field","icon","touched","errors","variant","fullWidth","helperText","renderHelperText","error","Boolean","InputProps","disableUnderline","endAdornment","LoginContainer","refError","useRef","refSuccess","navigate","useNavigate","dispatch","useDispatch","mutationLogin","useMutation","newUser","LOGIN_API","setPassword","handleCreateSucess","msg","current","isError","isSuccess","data","detail","handleCreateError","is_account_created","saveLoginAction","saveUserInfoAction","state","Error","message","add","initialValues","validationSchema","onSubmit","values","a","mutateAsync","mailIcon","component","lockIcon","Button","a11yProps","RightContainer","provider","GoogleAuthProvider","auth","getAuth","fb_provider","FacebookAuthProvider","fb_auth","React","setValue","mutationSignup","SIGNUP_API","isLoading","background","Paper","elevation","square","Stack","direction","justifyContent","Tabs","onChange","event","newValue","Tab","container","Divider","onClick","signInWithPopup","result","credential","credentialFromResult","reqData","user","social_status","providerId","SOCIAL_SIGNUP_API","res","catch","code","credentialFromError","GoButton","console","log","fbButton","align","SignInSide","position","top","left","transform","bgcolor","border","boxShadow","outline","RegsiterUser","explode","setExplode","location","useLocation","axiosInstance","useAxios","open","setOpen","handleClose","handleVerification","verificationCode","get","request","str","pathname","match","RegExp","fallbackRender","resetErrorBoundary","PageErrorBoundary","onReset","resetKeys","Modal","onClose","Box","CircularProgress","pt"],"mappings":"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","file":"static/js/27.85bd4050.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst sleepTimer = (time: number) => {\n  return new Promise((resolve) => setTimeout(resolve, time));\n};\n\nexport { useWindowDimensions, sleepTimer };\n","import { GoalModelType } from \"./typeHelpers\";\n\nconst goalFormModel: GoalModelType = {\n  formId: \"createGoalForm\",\n  formField: {\n    goalname: {\n      name: \"goalname\",\n      label: \"Goal Name\",\n      requiredErrorMsg: \"Goal Name is required\",\n      minError: \"Too Short, 10 character minimum\",\n      maxError: \"Too long, 25 character max\",\n    },\n    file: {\n      name: \"file\",\n      label: \"Image File*\",\n      requiredErrorMsg: \"File is Required\",\n      fileFormatError: \"Unsupported Format\",\n      fileMaxError: \"File too large\",\n    },\n    shortGoal: {\n      name: \"shortGoal\",\n      label: \"Short Goal*\",\n      requiredErrorMsg: \"Short Goal is required\",\n      minError: \"Too Short, 30 character minimum\",\n      maxError: \"Too long, 150 character max\",\n    },\n    topics: {\n      name: \"topic\",\n      label: \"Choose topic of your goal*\",\n      requiredErrorMsg: \"Topic is required\",\n      minError: \"1 Topic is required minimum\",\n    },\n    product: {\n      name: \"product\",\n      label: \"What are you buying?\",\n      requiredErrorMsg: \"Product Name is required\",\n    },\n    productlink: {\n      name: \"productlink\",\n      label: \"Where do you get it? Paste a link\",\n      requiredErrorMsg: \"Product Link is required\",\n    },\n    productunitcost: {\n      name: \"unitcost\",\n      label: \"Unit Cost in Dollar\",\n      requiredErrorMsg: \"Unit cost is required\",\n      minError: \"Unit cost must be greater than 0\",\n    },\n    productunitnumber: {\n      name: \"unitnumber\",\n      label: \"How many units?\",\n      requiredErrorMsg: \"Unit is required\",\n      minError: \"Unit must be greater than 0\",\n    },\n    productsubtotal: {\n      name: \"productsubtotal\",\n      label: \"Sub Total\",\n      requiredErrorMsg: \"Sub Total is required\",\n    },\n    // productservicefee: {\n    //   name: \"productservicefee\",\n    //   label: \"Service fee 10%\",\n    //   requiredErrorMsg: \"Service fee is required\",\n    // },\n\n    productpgwfee: {\n      name: \"productpgwfee\",\n      label: \"PGW fee\",\n      requiredErrorMsg: \"product pgw fee is required\",\n    },\n    productngofee: {\n      name: \"productngofee\",\n      label: \"NGO fee\",\n      requiredErrorMsg: \"product ngo fee is required\",\n    },\n    productplatformfee: {\n      name: \"productplatformfee\",\n      label: \"Platform fee\",\n      requiredErrorMsg: \"product platform fee is required\",\n    },\n\n    productgoaltotal: {\n      name: \"productgoaltotal\",\n      label: \"Total Goal Cost\",\n      requiredErrorMsg: \"Total Goal is required\",\n    },\n    videofile: {\n      name: \"videofile\",\n      label: \"Video\",\n      requiredErrorMsg: \"Video is Required\",\n      fileFormatError: \"'Unsupported Format'\",\n      fileMaxError: \"Video too large,less than 100 MB\",\n    },\n    full_description: {\n      name: \"full_description\",\n      label: \"Full Description\",\n      requiredErrorMsg: \"Full description is required\",\n      minError: \"100 character minimum\",\n    },\n  },\n};\n\nexport { goalFormModel };\n","import * as yup from \"yup\";\nimport { goalFormModel } from \"./goal-model\";\nconst FILE_SIZE = 5 * 1000000;\nconst VIDEO_SIZE = 250 * 1000000;\nconst SUPPORTED_FORMATS = [\n  \"image/jpg\",\n  \"image/jpeg\",\n  \"image/gif\",\n  \"image/png\",\n  \"image/PNG\",\n  \"image/webp\",\n  \"image/svg\",\n];\n\nconst SignUpValidaionSchema = yup.object().shape({\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup\n    .string()\n    .required(\"Password is required\")\n    .min(6, \"Minimum 6 Characters\")\n    .when(\"email\", {\n      is: (val: string) => (val && val.length > 6 ? true : false),\n      then: yup.string().not([yup.ref(\"email\")], \"Password can not be email\"),\n    }),\n  confirmPassword: yup.string().when(\"password\", {\n    is: (val: string) => (val && val.length > 0 ? true : false),\n    then: yup\n      .string()\n      .oneOf([yup.ref(\"password\")], \"Both password need to be the same\"),\n  }),\n});\n\nconst LoginValidaionSchema = yup.object().shape({\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup\n    .string()\n    .required(\"Password is required\")\n    .min(6, \"Minimum 6 Characters\")\n    .when(\"email\", {\n      is: (val: string) => (val && val.length > 6 ? true : false),\n      then: yup.string().not([yup.ref(\"email\")], \"Password can not be email\"),\n    }),\n});\n\nconst CreateProfileSchemaDonor = [\n  yup.object().shape({\n    username: yup\n      .string()\n      .matches(/^(\\S+$)/, \"This field cannot contain  blankspaces\")\n      .required(\"Field is required\")\n      .min(6, \"Minimum 6 Charachters\"),\n    full_name: yup\n      .string()\n      .required(\"Field is required\")\n      .when(\"username\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup\n          .string()\n          .not([yup.ref(\"username\")], \"Full name can not be username\"),\n      }),\n    country: yup.number().required(\"Country is required\"),\n    phone_number: yup\n      .string()\n      .matches(/^(\\+)[0-9]{7,16}$/, \"Enter correct number!\")\n      .required(\"Phone number is required\"),\n\n    bio: yup\n      .string()\n      .required(\"Bio is required\")\n      .max(100, \"Maximum 100 Charachters\")\n      .when(\"username\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup\n          .string()\n          .not([yup.ref(\"username\")], \"Bio name can not be username\"),\n      }),\n    image: yup\n      .mixed()\n      .required(\"Profile Image is required\")\n      .test(\n        \"fileSize\",\n        \"Maximum Size 5MB\",\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Invalid Image\",\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n  }),\n  yup.object().shape({\n    donee_notification: yup\n      .boolean()\n      .required(\"donee_notification is required\"),\n    account_activity: yup.boolean().required(\"account_activity is required\"),\n    donee_activity: yup.boolean().required(\"donee_activity is required\"),\n    achieved_goals: yup.boolean().required(\"achieved_goals is required\"),\n    new_followers: yup.boolean().required(\"new_followers is required\"),\n    NGO_role_assign: yup.boolean().required(\"user_notification is required\"),\n  }),\n];\nconst CreateProfileSchemaNgo = [\n  yup.object().shape({\n    username: yup\n      .string()\n      .matches(/^(\\S+$)/, \"This field cannot contain  blankspaces\")\n      .required(\"Field is required\")\n      .min(6, \"Minimum 6 Charachters\"),\n    full_name: yup\n      .string()\n      .required(\"Field is required\")\n      .when(\"username\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup\n          .string()\n          .not([yup.ref(\"username\")], \"Full name can not be username\"),\n      }),\n    email: yup.string().email().required(\"Email is required\"),\n    country: yup\n      .number()\n      .required(\"Country is required\")\n      .min(1, \"Minimum 1 Charachters\"),\n    phone_number: yup\n      .string()\n      .matches(/^(\\+)[0-9]{7,16}$/, \"Enter correct number!\")\n      .required(\"Phone number is required\"),\n    bio: yup\n      .string()\n      .required(\"Bio is required\")\n      .max(100, \"Maximum 100 Charachters\")\n      .when(\"email\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup.string().not([yup.ref(\"email\")], \"Bio name can not be email\"),\n      }),\n    image: yup\n      .mixed()\n      .required(\"Profile Image is required\")\n      .test(\n        \"fileSize\",\n        \"Maximum Size 5MB\",\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Invalid Image\",\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n    sdgs: yup\n      .array()\n      .required(\"SDGS is Required\")\n      .min(1, \"Minimum 1 is Required\"),\n  }),\n  yup.object().shape({\n    donee_notification: yup\n      .boolean()\n      .required(\"donee_notification is required\"),\n    account_activity: yup.boolean().required(\"account_activity is required\"),\n    donee_activity: yup.boolean().required(\"donee_activity is required\"),\n    achieved_goals: yup.boolean().required(\"achieved_goals is required\"),\n    new_followers: yup.boolean().required(\"new_followers is required\"),\n    NGO_role_assign: yup.boolean().required(\"user_notification is required\"),\n  }),\n  ,\n  yup.object().shape({\n    certification_incorporation: yup\n      .array(\n        yup\n          .mixed()\n          .required(\"Certification incorporation Images is required\")\n          .test(\"fileSize\", \"Maximum Size 5MB\", (value) =>\n            value.map((item: any) => item && item.size <= FILE_SIZE)\n          )\n          .test(\n            \"fileFormat\",\n            \"Invalid Image\",\n            (value) => value && SUPPORTED_FORMATS.includes(value.type)\n          )\n      )\n      .min(1, \"1 file is minimum\"),\n  }),\n];\n\nconst CreateProfileSchemaDonee = [\n  yup.object().shape({\n    username: yup\n      .string()\n      .matches(/^(\\S+$)/, \"This field cannot contain  blankspaces\")\n      .required(\"Field is required\")\n      .min(6, \"Minimum 6 Charachters\"),\n    full_name: yup\n      .string()\n      .required(\"Field is required\")\n      .when(\"username\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup\n          .string()\n          .not([yup.ref(\"username\")], \"Full name can not be username\"),\n      }),\n    email: yup.string().email().required(\"Email is required\"),\n    country: yup\n      .number()\n      .required(\"Country is required\")\n      .min(1, \"Minimum 1 Charachters\"),\n    phone_number: yup\n      .string()\n      .matches(/^(\\+)[0-9]{7,16}$/, \"Enter correct number!\")\n      .required(\"Phone number is required\"),\n    bio: yup\n      .string()\n      .required(\"Bio is required\")\n      .max(100, \"Maximum 100 Charachters\")\n      .when(\"email\", {\n        is: (val: string) => (val && val.length > 1 ? true : false),\n        then: yup.string().not([yup.ref(\"email\")], \"Bio name can not be email\"),\n      }),\n    image: yup\n      .mixed()\n      .required(\"Profile Image is required\")\n      .test(\n        \"fileSize\",\n        \"Maximum Size 5MB\",\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Invalid Image\",\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n    sdgs: yup\n      .array()\n      .required(\"SDGS is Required\")\n      .min(1, \"Minimum 1 is Required\"),\n  }),\n  yup.object().shape({\n    donee_notification: yup\n      .boolean()\n      .required(\"donee_notification is required\"),\n    account_activity: yup.boolean().required(\"account_activity is required\"),\n    donee_activity: yup.boolean().required(\"donee_activity is required\"),\n    achieved_goals: yup.boolean().required(\"achieved_goals is required\"),\n    new_followers: yup.boolean().required(\"new_followers is required\"),\n    NGO_role_assign: yup.boolean().required(\"user_notification is required\"),\n  }),\n\n  yup.object().shape({\n    id_front: yup\n      .mixed()\n      .required(\"ID front Image is required\")\n      .test(\n        \"fileSize\",\n        \"Maximum Size 5MB\",\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Invalid Image\",\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n    id_back: yup\n      .mixed()\n      .required(\"ID back Image is required\")\n      .test(\n        \"fileSize\",\n        \"Maximum Size 5MB\",\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        \"Invalid Image\",\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n  }),\n];\n\nconst {\n  formField: {\n    file,\n    goalname,\n    shortGoal,\n    topics,\n    product,\n    productlink,\n    productunitcost,\n    productunitnumber,\n    productsubtotal,\n    // productservicefee,\n\n    productpgwfee,\n    productngofee,\n    productplatformfee,\n\n    productgoaltotal,\n    videofile,\n    full_description,\n  },\n} = goalFormModel;\n\nconst SUPPORTED_FORMATS_VIDEO = [\"video/mp4\", \"video/mov\"];\nconst validationSchemaGoal = [\n  yup.object().shape({\n    [file.name]: yup\n      .mixed()\n      .required(file.requiredErrorMsg)\n      .test(\n        \"fileSize\",\n        file.fileMaxError,\n        (value) => value && value.size <= FILE_SIZE\n      )\n      .test(\n        \"fileFormat\",\n        file.fileFormatError,\n        (value) => value && SUPPORTED_FORMATS.includes(value.type)\n      ),\n    [goalname.name]: yup\n      .string()\n      .required(goalname.requiredErrorMsg)\n      .min(10, goalname.minError)\n      .max(25, goalname.maxError),\n    [shortGoal.name]: yup.string().required(shortGoal.requiredErrorMsg),\n    [topics.name]: yup\n      .array()\n      .required(topics.requiredErrorMsg)\n      .min(1, topics.minError),\n  }),\n  yup.object().shape({\n    [product.name]: yup.string().required(product.requiredErrorMsg),\n    [productlink.name]: yup\n      .string()\n      .matches(\n        /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/,\n        \"Enter correct url!\"\n      ),\n    [productunitcost.name]: yup\n      .number()\n      .min(1, productunitcost.minError)\n      .required(productunitcost.requiredErrorMsg),\n    [productunitnumber.name]: yup\n      .number()\n      .min(1, productunitnumber.minError)\n      .required(productunitnumber.requiredErrorMsg),\n    [productsubtotal.name]: yup\n      .number()\n      .required(productsubtotal.requiredErrorMsg),\n    // [productservicefee.name]: yup\n    //   .number()\n    //   .required(productservicefee.requiredErrorMsg),\n\n    [productpgwfee.name]: yup.number().required(productpgwfee.requiredErrorMsg),\n\n    [productngofee.name]: yup.number().required(productngofee.requiredErrorMsg),\n\n    [productplatformfee.name]: yup\n      .number()\n      .required(productplatformfee.requiredErrorMsg),\n\n    [productgoaltotal.name]: yup\n      .number()\n      .required(productgoaltotal.requiredErrorMsg),\n  }),\n  yup.object().shape({\n    [videofile.name]: yup\n      .array(\n        yup\n          .mixed()\n          .required(videofile.requiredErrorMsg)\n          .test(\n            \"fileSize\",\n            videofile.fileMaxError,\n            (value) => value && value.size <= VIDEO_SIZE\n          )\n          .test(\n            \"fileFormat\",\n            videofile.fileFormatError,\n            (value) => value && SUPPORTED_FORMATS_VIDEO.includes(value.type)\n          )\n      )\n      .min(1, \"1 video is minimum\"),\n    [full_description.name]: yup\n      .string()\n      .required(full_description.requiredErrorMsg),\n  }),\n];\n\nexport {\n  SignUpValidaionSchema,\n  LoginValidaionSchema,\n  CreateProfileSchemaDonor,\n  CreateProfileSchemaNgo,\n  CreateProfileSchemaDonee,\n  validationSchemaGoal,\n};\n","import { styled } from \"@material-ui/styles\";\r\n\r\nconst RootStyle = styled(\"div\")({\r\n  display: \"flex\",\r\n  minHeight: \"100%\",\r\n  overflow: \"hidden\",\r\n  backgroundColor: \"white\",\r\n});\r\n\r\nexport { RootStyle };\r\n","export default __webpack_public_path__ + \"static/media/doneelogo.c9e2e609.svg\";","export default __webpack_public_path__ + \"static/media/login_bg.eba3572f.jpeg\";","import { Theme } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Background from \"../../../../assets/cards/login_bg.jpeg\";\r\n\r\nconst useStylesSignup = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${Background})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor: theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    maxWidth: 300,\r\n  },\r\n  TextField: { backgroundColor: \"white\", borderRadius: 10 },\r\n  input: {\r\n    color: \"black\",\r\n    \"&::placeholder\": {\r\n      color: \"grey\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport { useStylesSignup };\r\n","import { Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { styled } from \"@material-ui/styles\";\r\nimport DoneLogo from \"../../../../assets/icons/doneelogo.svg\";\r\nimport { useStylesSignup } from \"./styles\";\r\nimport { useWindowDimensions } from \"../../../../utils/helperFunction\";\r\n\r\nconst RootSubTitle = styled(Typography)(() => ({\r\n  fontWeight: 700,\r\n  fontSize: 30,\r\n  color: \"white\",\r\n}));\r\n\r\nconst LeftContainer = () => {\r\n  const classes = useStylesSignup();\r\n  const { width } = useWindowDimensions();\r\n\r\n  return (\r\n    <Grid item xs={false} sm={false} md={6} className={classes.image}>\r\n      {width > 900 && (\r\n        <Grid sx={{ padding: 3 }}>\r\n          <img src={DoneLogo} alt=\"donelogo\" style={{ width: 180 }} />\r\n          <Grid sx={{ paddingTop: 4 }}>\r\n            <RootSubTitle>Welcome to the</RootSubTitle>\r\n            <RootSubTitle>first trully social</RootSubTitle>\r\n            <RootSubTitle>network</RootSubTitle>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LeftContainer;\r\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst TabPanel = (props: any) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","import { Icon, IconifyIcon } from \"@iconify/react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { FieldProps } from \"formik\";\r\nimport { useStylesSignup } from \"./styles\";\r\n\r\ninterface TextFieldRegisterType extends FieldProps {\r\n  // name: string;\r\n  // icon: IconifyIcon;\r\n  // onChange: ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\r\n  // autoComplete: string;\r\n  // type: string;\r\n  label?: boolean;\r\n  type?: string;\r\n  icon: IconifyIcon;\r\n}\r\n\r\nconst TextFieldRegister = ({\r\n  field,\r\n  form,\r\n  label,\r\n  type,\r\n  icon,\r\n}: TextFieldRegisterType) => {\r\n  const { touched, errors } = form;\r\n  const classes = useStylesSignup();\r\n  const renderHelperText = () => {\r\n    if (touched[field.name] && errors[field.name]) {\r\n      return errors[field.name];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      variant=\"filled\"\r\n      margin=\"normal\"\r\n      required\r\n      className={classes.TextField}\r\n      fullWidth\r\n      type={type}\r\n      helperText={renderHelperText()}\r\n      error={Boolean(touched[field.name] && errors[field.name])}\r\n      label={label}\r\n      {...field}\r\n      InputProps={{\r\n        classes: { input: classes.input },\r\n        disableUnderline: true,\r\n        endAdornment: <Icon icon={icon} color=\"#007AFF\" />,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextFieldRegister;\r\n","export default __webpack_public_path__ + \"static/media/fbbutton.b21a0c3a.png\";","export default __webpack_public_path__ + \"static/media/gobutton.2889aa8f.png\";","import React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport mailIcon from \"@iconify/icons-ant-design/mail-outline\";\nimport lockIcon from \"@iconify/icons-ant-design/lock-outline\";\nimport { Field, Form, Formik } from \"formik\";\nimport { useStylesSignup } from \"./styles\";\nimport { useMutation, UseMutationResult } from \"react-query\";\nimport { LoginValidaionSchema } from \"../../../../utils/formSchemas\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  AddFunction,\n  ILoginResponse,\n  LoginType,\n} from \"../../../../utils/typeHelpers\";\n\nimport { LOGIN_API } from \"../../../../utils/Api\";\nimport TextFieldRegister from \"./TextFIeldRegister\";\nimport { saveLoginAction } from \"../../../../redux/actions/loginAction\";\nimport { MessageError } from \"../../../../components/AlertMessageError\";\nimport { MessageSuccess } from \"../../../../components/AlertMessageSuccess\";\nimport { saveUserInfoAction } from \"../../../../redux/actions/saveUserInfoAction\";\n\nconst LoginContainer = ({}) => {\n  const refError = useRef<null | AddFunction>(null);\n  const refSuccess = useRef<null | AddFunction>(null);\n\n  const classes = useStylesSignup();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const mutationLogin: UseMutationResult<ILoginResponse, Error, LoginType> =\n    useMutation((newUser: LoginType) => LOGIN_API(newUser));\n\n  const [password, setPassword] = useState<string>(\"\");\n\n  const handleCreateError = (msg: string) => {\n    refError.current?.(msg);\n  };\n\n  const handleCreateSucess = (msg: string) => {\n    refSuccess.current?.(msg);\n  };\n\n  const { isError, error, isSuccess, data } = mutationLogin;\n\n  useEffect(() => {\n    if (isSuccess) {\n      if (\n        data?.detail === \"No active account found with the given credentials\"\n      ) {\n        handleCreateError(\"Wrong Credentials\");\n      } else if (data?.is_account_created === false) {\n        handleCreateSucess(\"Login Successful\");\n        dispatch(saveLoginAction(true));\n        dispatch(saveUserInfoAction(data));\n        setTimeout(() => {\n          navigate(\"../createprofiledonor\", { state: { password } });\n        }, 1000);\n      } else if (data?.is_account_created === true) {\n        handleCreateSucess(\"Login Successful\");\n        dispatch(saveLoginAction(true));\n        dispatch(saveUserInfoAction(data));\n        setTimeout(() => {\n          navigate(\"../\");\n        }, 1000);\n      }\n    } else if (isError) {\n      throw new Error(error?.message);\n    }\n  }, [isError, isSuccess]);\n\n  return (\n    <div>\n      <MessageError\n        children={(add: AddFunction) => {\n          refError.current = add;\n        }}\n      />\n      <MessageSuccess\n        children={(add: AddFunction) => {\n          refSuccess.current = add;\n        }}\n      />\n      <Formik\n        initialValues={{ email: \"\", password: \"\" }}\n        validationSchema={LoginValidaionSchema}\n        onSubmit={async (values) => {\n          setPassword(values.password);\n          await mutationLogin.mutateAsync(values);\n        }}\n      >\n        <Form className={classes.form}>\n          <Field\n            name=\"email\"\n            icon={mailIcon}\n            component={TextFieldRegister}\n            label=\"Email\"\n          />\n          <Field\n            name=\"password\"\n            icon={lockIcon}\n            component={TextFieldRegister}\n            label=\"Password\"\n            type=\"password\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginContainer;\n","import Button from \"@material-ui/core/Button\";\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  FacebookAuthProvider,\r\n} from \"firebase/auth\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport mailIcon from \"@iconify/icons-ant-design/mail-outline\";\r\nimport lockIcon from \"@iconify/icons-ant-design/lock-outline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Field, Form, Formik } from \"formik\";\r\n\r\nimport { Divider, Stack, Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport { useStylesSignup } from \"./styles\";\r\nimport TabPanel from \"../../../../components/TabPanel\";\r\nimport TextFieldRegister from \"./TextFIeldRegister\";\r\n\r\nimport fbButton from \"../../../../assets/icons/fbbutton.png\";\r\nimport GoButton from \"../../../../assets/icons/gobutton.png\";\r\n\r\nimport {\r\n  AddFunction,\r\n  ISignUPResponse,\r\n  LoginType,\r\n  SignupType,\r\n  SocialSignupType,\r\n} from \"../../../../utils/typeHelpers\";\r\nimport {\r\n  LOGIN_API,\r\n  SIGNUP_API,\r\n  SOCIAL_SIGNUP_API,\r\n} from \"../../../../utils/Api\";\r\nimport { useMutation, UseMutationResult } from \"react-query\";\r\nimport { SignUpValidaionSchema } from \"../../../../utils/formSchemas\";\r\nimport LoginContainer from \"./LoginContainer\";\r\nimport { MessageError } from \"../../../../components/AlertMessageError\";\r\nimport { MessageSuccess } from \"../../../../components/AlertMessageSuccess\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { saveLoginAction } from \"../../../../redux/actions/loginAction\";\r\nimport { saveUserInfoAction } from \"../../../../redux/actions/saveUserInfoAction\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\nconst RightContainer = () => {\r\n  const provider = new GoogleAuthProvider();\r\n  const auth = getAuth();\r\n\r\n  const fb_provider = new FacebookAuthProvider();\r\n  const fb_auth = getAuth();\r\n\r\n  const refError = useRef<null | AddFunction>(null);\r\n  const refSuccess = useRef<null | AddFunction>(null);\r\n\r\n  const classes = useStylesSignup();\r\n  const [value, setValue] = React.useState(0);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleCreateError = (msg: string) => {\r\n    refError.current?.(msg);\r\n  };\r\n\r\n  const handleCreateSucess = (msg: string) => {\r\n    refSuccess.current?.(msg);\r\n  };\r\n\r\n  const mutationSignup: UseMutationResult<ISignUPResponse, Error, SignupType> =\r\n    useMutation((newUser: SignupType) => SIGNUP_API(newUser));\r\n\r\n  const { isLoading, isError, error, isSuccess, data } = mutationSignup;\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      if (data?.email[0] === \"This field must be unique.\") {\r\n        handleCreateError(\"This email already exist\");\r\n      } else {\r\n        handleCreateSucess(\r\n          \"Sign Up is Completed Successfully.\\n Please Check your Email for E-Mail Validation.\"\r\n        );\r\n        setValue(1);\r\n      }\r\n    } else if (isError) {\r\n      throw new Error(error?.message);\r\n    }\r\n  }, [isLoading, isError]);\r\n  return (\r\n    <Grid\r\n      sx={{\r\n        background:\r\n          \"linear-gradient(179.85deg, #324562 1.59%, #0077B6 49.76%, #48CAE4 99.87%)\",\r\n      }}\r\n      item\r\n      xs={12}\r\n      sm={12}\r\n      md={6}\r\n      component={Paper}\r\n      elevation={6}\r\n      square\r\n    >\r\n      <MessageError\r\n        children={(add: AddFunction) => {\r\n          refError.current = add;\r\n        }}\r\n      />\r\n      <MessageSuccess\r\n        children={(add: AddFunction) => {\r\n          refSuccess.current = add;\r\n        }}\r\n      />\r\n      <Box sx={{ width: \"100%\" }}>\r\n        <Box>\r\n          <Stack\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"Register\">\r\n              <Tab\r\n                style={{ color: value === 0 ? \"white\" : \"grey\" }}\r\n                label=\"Sign Up\"\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab\r\n                style={{ color: value === 1 ? \"white\" : \"grey\" }}\r\n                label=\"Login\"\r\n                {...a11yProps(1)}\r\n              />\r\n            </Tabs>\r\n          </Stack>\r\n        </Box>\r\n\r\n        <TabPanel value={value} index={0}>\r\n          <div className={classes.paper}>\r\n            <Formik\r\n              initialValues={{ email: \"\", password: \"\", confirmPassword: \"\" }}\r\n              validationSchema={SignUpValidaionSchema}\r\n              onSubmit={async (values) => {\r\n                await mutationSignup.mutateAsync(values);\r\n              }}\r\n            >\r\n              <Form className={classes.form}>\r\n                <Field\r\n                  name=\"email\"\r\n                  icon={mailIcon}\r\n                  component={TextFieldRegister}\r\n                  label=\"Email\"\r\n                />\r\n                <Field\r\n                  name=\"password\"\r\n                  icon={lockIcon}\r\n                  component={TextFieldRegister}\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                />\r\n                <Field\r\n                  name=\"confirmPassword\"\r\n                  icon={lockIcon}\r\n                  component={TextFieldRegister}\r\n                  label=\"Confirm Password\"\r\n                  type=\"password\"\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </Form>\r\n            </Formik>\r\n\r\n            <Box sx={{ height: 20 }} />\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Divider variant=\"middle\" sx={{ backgroundColor: \"white\" }} />\r\n              </Grid>\r\n            </Grid>\r\n            <Box sx={{ height: 20 }} />\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <img\r\n                onClick={() => {\r\n                  signInWithPopup(auth, provider)\r\n                    .then((result) => {\r\n                      const credential =\r\n                        GoogleAuthProvider.credentialFromResult(result);\r\n\r\n                      const reqData: SocialSignupType = {\r\n                        email: result.user.email!,\r\n                        social_status: credential?.providerId!,\r\n                      };\r\n                      SOCIAL_SIGNUP_API(reqData).then((res) => {\r\n                        if (res === \"Email already used\") {\r\n                          handleCreateError(res);\r\n                        } else if (res === \"Network error\") {\r\n                          handleCreateError(res);\r\n                        } else {\r\n                          handleCreateSucess(\r\n                            \"Sign Up is Completed Successfully.\"\r\n                          );\r\n                        }\r\n                      });\r\n                    })\r\n                    .catch((error) => {\r\n                      // Handle Errors here.\r\n                      const errorCode = error.code;\r\n                      const errorMessage = error.message;\r\n                      // The email of the user's account used.\r\n                      const email = error.email;\r\n                      // The AuthCredential type that was used.\r\n                      const credential =\r\n                        GoogleAuthProvider.credentialFromError(error);\r\n                      // ...\r\n                    });\r\n                }}\r\n                src={GoButton}\r\n                alt=\"fbbutton\"\r\n                style={{ maxWidth: 300 }}\r\n              />\r\n              <Box sx={{ height: 10 }} />\r\n              <img\r\n                onClick={() => {\r\n                  signInWithPopup(fb_auth, fb_provider)\r\n                    .then((result) => {\r\n                      console.log(result.providerId);\r\n                      // The signed-in user info.\r\n                      const user = result.user;\r\n\r\n                      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n                      const credential =\r\n                        FacebookAuthProvider.credentialFromResult(result);\r\n                      // const accessToken = credential.accessToken;\r\n\r\n                      // ...\r\n                    })\r\n                    .catch((error) => {\r\n                      // Handle Errors here.\r\n                      const errorCode = error.code;\r\n                      const errorMessage = error.message;\r\n                      // The email of the user's account used.\r\n                      const email = error.email;\r\n                      // The AuthCredential type that was used.\r\n                      const credential =\r\n                        FacebookAuthProvider.credentialFromError(error);\r\n\r\n                      // ...\r\n                    });\r\n                }}\r\n                src={fbButton}\r\n                alt=\"fbbutton\"\r\n                style={{ maxWidth: 300 }}\r\n              />\r\n              <Box sx={{ height: 20 }} />\r\n              <Typography variant=\"body2\" color=\"white\" align=\"center\">\r\n                Terms of Service and Privacy Policy\r\n              </Typography>\r\n              <Box sx={{ height: 5 }} />\r\n              <Typography variant=\"body2\" color=\"white\" align=\"center\">\r\n                Have an acount? Login\r\n              </Typography>\r\n            </Grid>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <div className={classes.paper}>\r\n            <LoginContainer />\r\n            <Box sx={{ height: 20 }} />\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Divider variant=\"middle\" sx={{ backgroundColor: \"white\" }} />\r\n              </Grid>\r\n            </Grid>\r\n            <Box sx={{ height: 20 }} />\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <img\r\n                onClick={() => {\r\n                  signInWithPopup(auth, provider).then((result) => {\r\n                    const reqData: LoginType = {\r\n                      email: result.user.email!,\r\n                      password: result.user.email!,\r\n                    };\r\n\r\n                    LOGIN_API(reqData).then((res) => {\r\n                      if (\r\n                        res?.detail ===\r\n                        \"No active account found with the given credentials\"\r\n                      ) {\r\n                        handleCreateError(\"Wrong Credentials\");\r\n                      } else if (res.is_account_created === false) {\r\n                        handleCreateSucess(\"Login Successful\");\r\n                        dispatch(saveLoginAction(true));\r\n                        dispatch(saveUserInfoAction(res));\r\n                        setTimeout(() => {\r\n                          navigate(\"../createprofiledonor\");\r\n                        }, 1000);\r\n                      } else if (res?.is_account_created === true) {\r\n                        handleCreateSucess(\"Login Successful\");\r\n                        dispatch(saveLoginAction(true));\r\n                        dispatch(saveUserInfoAction(res));\r\n                        setTimeout(() => {\r\n                          navigate(\"../\");\r\n                        }, 1000);\r\n                      }\r\n                    });\r\n                  });\r\n                }}\r\n                src={GoButton}\r\n                alt=\"fbbutton\"\r\n                style={{ maxWidth: 300 }}\r\n              />\r\n              <Box sx={{ height: 10 }} />\r\n              <img src={fbButton} alt=\"fbbutton\" style={{ maxWidth: 300 }} />\r\n              <Box sx={{ height: 20 }} />\r\n              <Typography variant=\"body2\" color=\"white\" align=\"center\">\r\n                Terms of Service and Privacy Policy\r\n              </Typography>\r\n              <Box sx={{ height: 5 }} />\r\n              <Typography variant=\"body2\" color=\"white\" align=\"center\">\r\n                Dont have an acount? Sign Up\r\n              </Typography>\r\n            </Grid>\r\n          </div>\r\n        </TabPanel>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RightContainer;\r\n","import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport LeftContainer from \"./LeftContainer\";\r\nimport RightContainer from \"./RightContainer\";\r\nimport { useStylesSignup } from \"./styles\";\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStylesSignup();\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <LeftContainer />\r\n      <RightContainer />\r\n    </Grid>\r\n  );\r\n}\r\n","import { CircularProgress, Grid, Modal, Typography } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/system\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\n\r\nimport { useLocation } from \"react-router\";\r\nimport { MessageError } from \"../../../components/AlertMessageError\";\r\nimport { MessageSuccess } from \"../../../components/AlertMessageSuccess\";\r\nimport { RootStyle } from \"../../../components/RootStyle\";\r\nimport { AddFunction } from \"../../../utils/typeHelpers\";\r\nimport useAxios from \"../../../utils/useAxios\";\r\nimport PageErrorBoundary from \"../../Errror/PageErrorBoundary\";\r\nimport RegisterContainer from \"./Components/RegisterContainer\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 140,\r\n  height: 140,\r\n  bgcolor: \"background.paper\",\r\n  border: \"none\",\r\n  boxShadow: 24,\r\n  outline: \"none\",\r\n  borderRadius: 2,\r\n};\r\n\r\nconst RegsiterUser = () => {\r\n  const [explode, setExplode] = useState(false);\r\n  const refError = useRef<null | AddFunction>(null);\r\n  const refSuccess = useRef<null | AddFunction>(null);\r\n  const location = useLocation();\r\n  const axiosInstance = useAxios();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handleCreateError = (msg: string) => {\r\n    refError.current?.(msg);\r\n  };\r\n  const handleCreateSucess = (msg: string) => {\r\n    refSuccess.current?.(msg);\r\n  };\r\n  const handleVerification = async (verificationCode: string) => {\r\n    const request = await axiosInstance.get(`verify-user/${verificationCode}`);\r\n    handleClose();\r\n    if (request.data.message === \"id is active now\") {\r\n      handleCreateSucess(\"Your account is now activated. Please login now.\");\r\n    } else {\r\n      handleCreateError(\"Something went wrong. Please try again.\");\r\n    }\r\n\r\n    return request;\r\n  };\r\n\r\n  useEffect(() => {\r\n    var str = location.pathname;\r\n\r\n    var res: RegExpMatchArray | null | undefined = str?.match(\r\n      new RegExp(\"/verifyuser/id=([^/]+)\")\r\n    );\r\n    if (res) {\r\n      handleOpen();\r\n      const verificationCode: string = res[1];\r\n      handleVerification(verificationCode);\r\n    }\r\n  }, [location.pathname]);\r\n  return (\r\n    <ErrorBoundary\r\n      fallbackRender={({ error, resetErrorBoundary }) => (\r\n        <PageErrorBoundary\r\n          error={error}\r\n          resetErrorBoundary={resetErrorBoundary}\r\n        />\r\n      )}\r\n      onReset={() => setExplode(false)}\r\n      resetKeys={[explode]}\r\n    >\r\n      <RootStyle>\r\n        <MessageError\r\n          children={(add: AddFunction) => {\r\n            refError.current = add;\r\n          }}\r\n        />\r\n        <MessageSuccess\r\n          children={(add: AddFunction) => {\r\n            refSuccess.current = add;\r\n          }}\r\n        />\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              style={{ minHeight: 140 }}\r\n            >\r\n              <CircularProgress color=\"info\" />\r\n              <Typography pt={2} variant=\"body1\">\r\n                Verifying user\r\n              </Typography>\r\n            </Grid>\r\n          </Box>\r\n        </Modal>\r\n        <RegisterContainer />\r\n      </RootStyle>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default RegsiterUser;\r\n"],"sourceRoot":""}