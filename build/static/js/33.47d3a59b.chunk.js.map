{"version":3,"sources":["screen/Home/Common/Notifications/StyledAvatar.tsx","screen/Home/Common/Notifications/SingleResult.tsx","screen/Home/Common/Notifications/Notifications.tsx"],"names":["StyledAvatar","styled","Avatar","height","width","margin","SingleResult","list","className","is_read","Grid","container","spacing","item","to","alt","src","from_user","image","xs","Typography","variant","component","text","display","gutterBottom","created_at","TabPanel","props","children","value","index","other","role","hidden","id","Box","sx","p","Notifications","userState","useSelector","state","AuthReducer","axiosInstance","useAxios","useQuery","userInfo","access","a","get","response","data","isLoading","isError","error","lists","React","useState","setValue","ErrorCatchComponent","ApiErrorPage","Error","columns","md","borderBottom","borderColor","Tabs","onChange","event","newValue","Tab","label","undefined","map","Loader"],"mappings":"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","file":"static/js/33.47d3a59b.chunk.js","sourcesContent":["import { Avatar } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/styles\";\n\nconst StyledAvatar = styled(Avatar)({\n  height: 60,\n  width: 60,\n  margin: \"2px auto\",\n});\n\nexport { StyledAvatar };\n","import React from 'react'\nimport {AppBar, Tabs, Tab, Typography, Box, Grid, Container, TextField, Paper} from '@material-ui/core';\nimport {StyledAvatar} from \"./StyledAvatar\";\nimport { Link } from \"react-router-dom\";\nimport { NotificaitonListType} from \"../../../../utils/typeHelpers\";\n\nconst SingleResult = ({ list }: { list: NotificaitonListType }) => {\n    // console.log(\"list: \", list);\n    return (\n        <div className={`single-notification-result  ${list.is_read ? 'single-notification-green' : 'single-notification-red'} `}>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <Link to=\"\">\n                        <StyledAvatar alt=\"ProfileAvatar\" src={list.from_user.image} />\n                    </Link> \n                </Grid>\n                <Grid item xs>\n                    <Link className=\"notification-link\" to=\"\">\n                        <Typography className=\"notification-title\" variant=\"subtitle2\" component=\"h6\">\n                            {list.text}\n                        </Typography>\n                        <Typography className=\"notification-time\" variant=\"caption\" display=\"block\" gutterBottom>\n                            {list.created_at}\n                        </Typography>\n                    </Link>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default SingleResult;\n","import React from 'react'\nimport { useSelector } from \"react-redux\"; \nimport { UseQueryResult, useQuery } from \"react-query\";\nimport useAxios from \"../../../../utils/useAxios\";\nimport { RootAppState, NotificaitonType } from \"../../../../utils/typeHelpers\";\n\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {AppBar, Tabs, Tab, Typography, Box, Grid, Container, TextField, Paper} from '@material-ui/core';\nimport SingleResult from \"./SingleResult\";\nimport './styles.css';\n\nimport ErrorCatchComponent from \"../../../../components/ErrorCatchComponent\";\nimport ApiErrorPage from \"../../../Errror/ApiErrorPage\";\nimport Loader from \"../../../../components/Loader\";\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: number;\n    value: number;\n  }\n  \nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n        >\n        {value === index && (\n            <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n            </Box>\n        )}\n        </div>\n    );\n}\n  \nfunction a11yProps(index: number) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n  \n\nconst Notifications = () => {\n    const userState = useSelector((state: RootAppState) => state.AuthReducer);\n    // console.log('userState: ',userState);\n\n    const axiosInstance = useAxios();\n    const { data, isLoading, isError, error }: UseQueryResult<NotificaitonType, Error> = useQuery(\n      [\"notificaitonDataType\", userState.userInfo.access],\n      async () => {\n        const response = await axiosInstance.get(`/live-notification-list/`);\n  \n        return response.data;\n      }\n    );\n    const lists = data?.list;\n\n    // console.log('lists: ',lists);\n\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n      setValue(newValue);\n    };\n\n    return (\n\n    <ErrorCatchComponent>\n      {isLoading === false ? (\n        <div>\n          {isError ? (\n            <ApiErrorPage\n                error={error ? error : new Error(\"Network response was not ok.\")}\n            />\n          ) : (\n\n            <div className=\"notifications\">\n                <Grid container spacing={2} columns={14}>\n                    <Grid item md={4}>\n                        \n                    </Grid>\n                    <Grid item md={6} xs={12} className=\"notifications-div\">\n                        <Typography variant=\"h4\" component=\"h2\">\n                            Notifications\n                        </Typography>\n                        <Box sx={{ width: '100%'}}>\n                            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                <Tabs value={value} onChange={handleChange} aria-label=\"notification\">\n                                    <Tab label=\"All\" {...a11yProps(0)} />\n                                </Tabs>\n                            </Box>\n                            <div className=\"all-cnt\">\n                                <TabPanel value={value} index={0}>\n                                    {lists !== undefined && lists.map((list, index) => (\n                                        <SingleResult list={list}/>\n                                    ))}\n                                </TabPanel>\n                            </div>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </div>\n           \n            \n          )}\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </ErrorCatchComponent>\n\n    )\n}\n\nexport default Notifications;\n"],"sourceRoot":""}