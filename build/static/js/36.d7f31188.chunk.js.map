{"version":3,"sources":["redux/actions/saveNgoProfileIDaction.ts","screen/Authentication/Components/DoneeInvitationCode.tsx"],"names":["saveNgoProfileIDaction","profileID","dispatch","type","SAVE_NGO_PROFILEID_ACTION","payload","DoneeInvitationCode","navigate","useNavigate","useDispatch","useState","refCode","setRefCode","refError","useRef","refSuccess","is_account_created","useSelector","state","AuthReducer","userInfo","useEffect","container","spacing","direction","alignItems","justifyContent","style","minHeight","children","add","current","item","xs","fullWidth","id","label","value","onChange","e","target","variant","color","onClick","VERIFY_DONE_INVITE_API","then","response","ngo_profile_id","msg","handleCreateSucess","setTimeout","error","handleCreateError","catch","err","JSON","stringify","message"],"mappings":"kGAAA,8CAEaA,EAAyB,SAACC,GACrC,OAAO,SAACC,GACNA,EAAS,CACPC,KAAMC,IACNC,QAASJ,O,gJCsGAK,UAtFa,WAC1B,IAAMC,EAAWC,cACXN,EAAWO,cACjB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAA2B,MACtCC,EAAaD,iBAA2B,MAExCE,EAAqBC,aACzB,SAACC,GAAD,OAAyBA,EAAMC,YAAYC,SAASJ,sBAGtDK,qBAAU,WACHL,GACHT,EAAS,2BAEV,CAACS,IA+BJ,OACE,eAAC,IAAD,CACEM,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACfC,MAAO,CAAEC,UAAW,QANtB,UAQE,cAAC,IAAD,CACEC,SAAU,SAACC,GACTjB,EAASkB,QAAUD,KAGvB,cAAC,IAAD,CACED,SAAU,SAACC,GACTf,EAAWgB,QAAUD,KAGzB,cAAC,IAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CACEC,WAAS,EACTC,GAAG,oBACHC,MAAM,6BACNC,MAAO1B,EACP2B,SAAU,SAACC,GAAD,OAAO3B,EAAW2B,EAAEC,OAAOH,YAIzC,cAAC,IAAD,CAAML,MAAI,EAACC,GAAI,EAAf,SACe,KAAZtB,GACC,cAAC,IAAD,CAAQ8B,QAAQ,YAAYC,MAAM,YAAYC,QApDjC,WACnBC,YAAuBjC,GACpBkC,MAAK,SAACC,GACDA,EAASC,iBAPQ,SAACC,GAAiB,IAAD,EAC1C,UAAAjC,EAAWgB,eAAX,cAAAhB,EAAqBiC,GAOfC,CAAmB,4BACnB/C,EAASF,YAAuB8C,EAASC,iBACzCG,YAAW,WAGT3C,EAAS,2BAA4B,CACnCW,MAAO,CAAEP,eAEV,OACyB,mCAAnBmC,EAASK,OArBA,SAACH,GAAiB,IAAD,EACzC,UAAAnC,EAASkB,eAAT,cAAAlB,EAAmBmC,GAqBbI,CAAkB,+CAGrBC,OAAM,SAACC,GACN,MAAM,IAAIA,EAAIC,KAAKC,UAAUF,EAAIG,cAkC/B","file":"static/js/36.d7f31188.chunk.js","sourcesContent":["import { SAVE_NGO_PROFILEID_ACTION } from \"../types\";\n\nexport const saveNgoProfileIDaction = (profileID: string) => {\n  return (dispatch: (arg0: { type: string; payload: string }) => void) => {\n    dispatch({\n      type: SAVE_NGO_PROFILEID_ACTION,\n      payload: profileID,\n    });\n  };\n};\n","import {\r\n  Container,\r\n  TextField,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/system\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { MessageError } from \"../../../components/AlertMessageError\";\r\nimport { MessageSuccess } from \"../../../components/AlertMessageSuccess\";\r\nimport { saveNgoProfileIDaction } from \"../../../redux/actions/saveNgoProfileIDaction\";\r\nimport { VERIFY_DONE_INVITE_API } from \"../../../utils/Api\";\r\nimport {\r\n  AddFunction,\r\n  RootAppState,\r\n  VerifyInvitationProps,\r\n} from \"../../../utils/typeHelpers\";\r\n\r\nconst DoneeInvitationCode = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [refCode, setRefCode] = useState(\"\");\r\n  const refError = useRef<null | AddFunction>(null);\r\n  const refSuccess = useRef<null | AddFunction>(null);\r\n\r\n  const is_account_created = useSelector(\r\n    (state: RootAppState) => state.AuthReducer.userInfo.is_account_created\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!is_account_created) {\r\n      navigate(\"../createprofiledonor\");\r\n    }\r\n  }, [is_account_created]);\r\n\r\n  const handleCreateError = (msg: string) => {\r\n    refError.current?.(msg);\r\n  };\r\n\r\n  const handleCreateSucess = (msg: string) => {\r\n    refSuccess.current?.(msg);\r\n  };\r\n\r\n  const onRedeemCode = () => {\r\n    VERIFY_DONE_INVITE_API(refCode)\r\n      .then((response: VerifyInvitationProps) => {\r\n        if (response.ngo_profile_id) {\r\n          handleCreateSucess(\"Validation is Successful\");\r\n          dispatch(saveNgoProfileIDaction(response.ngo_profile_id));\r\n          setTimeout(() => {\r\n            // @ts-ignore: Object is possibly 'null'.\r\n\r\n            navigate(\"../../createprofiledonee\", {\r\n              state: { refCode },\r\n            });\r\n          }, 1500);\r\n        } else if (response.error === \"400 invitation not code found.\") {\r\n          handleCreateError(\"Validation is Failed,Wrong Referral Code\");\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        throw new err(JSON.stringify(err.message));\r\n      });\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      style={{ minHeight: \"90vh\" }}\r\n    >\r\n      <MessageError\r\n        children={(add: AddFunction) => {\r\n          refError.current = add;\r\n        }}\r\n      />\r\n      <MessageSuccess\r\n        children={(add: AddFunction) => {\r\n          refSuccess.current = add;\r\n        }}\r\n      />\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          id=\"outlined-required\"\r\n          label=\"Enter your invitation code\"\r\n          value={refCode}\r\n          onChange={(e) => setRefCode(e.target.value)}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        {refCode !== \"\" && (\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onRedeemCode}>\r\n            Redeem Code\r\n          </Button>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DoneeInvitationCode;\r\n"],"sourceRoot":""}