{"version":3,"sources":["screen/Home/NGO/Dashboard/Pages/AdminWaiting.tsx"],"names":["descendingComparator","a","b","orderBy","TABLE_HEAD","id","label","alignRight","WaitingAdminList","axiosIntance","useAxios","useState","refecth","setRefetch","waitingAdminList","useQuery","get","response","data","isLoading","isError","error","maxWidth","sx","minHeight","Error","AdminWaiting","handleRefetch","profile_image","useSelector","state","AuthReducer","userInfo","user_profile","page","setPage","rowsPerPage","setRowsPerPage","filterName","setFilterName","order","setOrder","open","setOpen","setOrderBy","setId","filteredUsers","applySortFilterhistory","getComparator","isUserNotFound","length","boxShadow","customShadows","z1","handleClose","OPTIONS","value","title","onFilterName","event","target","minWidth","headLabel","rowCount","onRequestSort","property","slice","map","row","goal","profile","requested_amount","remark","status","align","src","image","GoalName","username","profile_type","direction","alignItems","spacing","justifyContent","color","onClick","colSpan","py","searchQuery","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","parseInt","styled","TableCell","fontsize","fontWeight","textTransform"],"mappings":"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","file":"static/js/39.08b7ba68.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TablePagination,\r\n  TableRow,\r\n  Card,\r\n  CardHeader,\r\n  Stack,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  RootAppState,\r\n  WaitingListAdminObject,\r\n} from \"../../../../../utils/typeHelpers\";\r\nimport { applySortFilterhistory } from \"./Goals\";\r\nimport { customShadows } from \"../../../../../theme/shadows\";\r\nimport { ReviewModal, UserListHead, UserListToolbar } from \"./components\";\r\nimport Scrollbar from \"../../../../../components/Scrollbar\";\r\n\r\nimport SearchNotFound from \"../../../../../components/SearchNotFound\";\r\nimport Loader from \"../../../../../components/Loader\";\r\nimport useAxios from \"../../../../../utils/useAxios\";\r\nimport { useQuery, UseQueryResult } from \"react-query\";\r\nimport ApiErrorPage from \"../../../../Errror/ApiErrorPage\";\r\n\r\nfunction getComparator(order: string, orderBy: keyof WaitingListAdminObject) {\r\n  return order === \"desc\"\r\n    ? (a: WaitingListAdminObject, b: WaitingListAdminObject) =>\r\n        descendingComparator(a, b, orderBy)\r\n    : (a: WaitingListAdminObject, b: WaitingListAdminObject) =>\r\n        -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction descendingComparator(\r\n  a: WaitingListAdminObject,\r\n  b: WaitingListAdminObject,\r\n  orderBy: keyof WaitingListAdminObject\r\n) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nconst TABLE_HEAD = [\r\n  { id: \"image\", label: \"Goal Image\", alignRight: false },\r\n  { id: \"title\", label: \"Goal Title\", alignRight: false },\r\n  { id: \"username\", label: \"Username\", alignRight: false },\r\n  { id: \"profile_type\", label: \"Profile Type\", alignRight: false },\r\n  { id: \"avatar\", label: \"Avatar\", alignRight: false },\r\n  { id: \"requested_amount\", label: \"Requested Amount\", alignRight: false },\r\n  { id: \"remark\", label: \"Remark\", alignRight: false },\r\n  { id: \"status\", label: \"Status\", alignRight: false },\r\n  { id: \"action\", label: \"Action\", alignRight: false },\r\n];\r\n\r\nconst WaitingAdminList = () => {\r\n  const axiosIntance = useAxios();\r\n\r\n  const [refecth, setRefetch] = useState(false);\r\n\r\n  const waitingAdminList: UseQueryResult<WaitingListAdminObject[], Error> =\r\n    useQuery([\"waitingAdminList\", refecth], async () => {\r\n      const response = await axiosIntance.get(`/waiting-for-admin-list/`);\r\n      return response.data;\r\n    });\r\n\r\n  const { data, isLoading, isError, error } = waitingAdminList;\r\n\r\n  const handleRefetch = () => setRefetch(!refecth);\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ minHeight: \"100vh\" }}>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : isError ? (\r\n        <ApiErrorPage error={error ? error : new Error(\"Network Error\")} />\r\n      ) : (\r\n        data && <AdminWaiting data={data} handleRefetch={handleRefetch} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WaitingAdminList;\r\n\r\nconst AdminWaiting = ({\r\n  data,\r\n  handleRefetch,\r\n}: {\r\n  data: WaitingListAdminObject[];\r\n  handleRefetch: () => void;\r\n}) => {\r\n  const profile_image = useSelector(\r\n    (state: RootAppState) =>\r\n      state.AuthReducer.userInfo.user_profile?.profile_image\r\n  );\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [filterName, setFilterName] = useState(\"\");\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [open, setOpen] = useState(false);\r\n  const [orderBy, setOrderBy] = useState<keyof WaitingListAdminObject>(\"id\");\r\n\r\n  const [id, setId] = useState<null | number>(null);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleFilterByName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const handleRequestSort = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    property: keyof WaitingListAdminObject\r\n  ) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const filteredUsers = applySortFilterhistory(\r\n    data,\r\n    getComparator(order, orderBy),\r\n    filterName\r\n  );\r\n\r\n  const isUserNotFound = data.length === 0;\r\n\r\n  const handleChangePage = (event: any, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  const OPTIONS = [\r\n    { value: \"REJECTED_BY_ADMIN\", label: \"REJECTED BY ADMIN\" },\r\n    { value: \"PAID\", label: \"PAID\" },\r\n  ];\r\n\r\n  return (\r\n    <Card sx={{ boxShadow: customShadows.z1 }}>\r\n      <ReviewModal\r\n        open={open}\r\n        handleClose={handleClose}\r\n        id={id}\r\n        handleRefetch={handleRefetch}\r\n        OPTIONS={OPTIONS}\r\n      />\r\n      <CardHeader title=\"Admin Waiting List Table\" />\r\n\r\n      <UserListToolbar\r\n        filterName={filterName}\r\n        onFilterName={handleFilterByName}\r\n      />\r\n\r\n      <Scrollbar sx={{}}>\r\n        <TableContainer sx={{ minWidth: 800 }}>\r\n          <Table>\r\n            <UserListHead\r\n              order={order}\r\n              orderBy={orderBy}\r\n              headLabel={TABLE_HEAD}\r\n              rowCount={data.length}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {filteredUsers\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row: WaitingListAdminObject) => {\r\n                  const {\r\n                    id,\r\n                    goal,\r\n                    profile,\r\n                    requested_amount,\r\n                    remark,\r\n                    status,\r\n                  } = row;\r\n\r\n                  return (\r\n                    <TableRow>\r\n                      <TableCell align=\"left\">\r\n                        {goal === null ? (\r\n                          <Avatar src={profile_image} />\r\n                        ) : (\r\n                          <Avatar src={goal.image} />\r\n                        )}\r\n                      </TableCell>\r\n                      {goal === null ? (\r\n                        <GoalName align=\"left\">Donee Amount</GoalName>\r\n                      ) : (\r\n                        <GoalName align=\"left\">{goal.title}</GoalName>\r\n                      )}\r\n                      <GoalName align=\"left\">{profile.username}</GoalName>\r\n                      <GoalName align=\"left\">{profile.profile_type}</GoalName>\r\n                      <TableCell align=\"left\">\r\n                        <Avatar src={profile.image} />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">${requested_amount}</TableCell>\r\n                      <TableCell align=\"left\">{remark}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Stack\r\n                          direction=\"row\"\r\n                          alignItems=\"center\"\r\n                          spacing={2}\r\n                          justifyContent=\"space-between\"\r\n                        >\r\n                          <Typography>{status}</Typography>\r\n                        </Stack>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Button\r\n                          color=\"info\"\r\n                          onClick={async () => {\r\n                            await setId(id);\r\n                            await handleOpen();\r\n                          }}\r\n                        >\r\n                          Change Status\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n            {isUserNotFound && (\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                    <SearchNotFound searchQuery={filterName} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            )}\r\n          </Table>\r\n        </TableContainer>\r\n      </Scrollbar>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst GoalName = styled(TableCell)(() => ({\r\n  color: \"#343A40\",\r\n  fontsize: 14,\r\n  fontWeight: \"normal\",\r\n  textTransform: \"capitalize\",\r\n}));\r\n"],"sourceRoot":""}