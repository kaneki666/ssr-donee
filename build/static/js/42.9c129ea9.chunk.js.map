{"version":3,"sources":["screen/Home/NGO/Dashboard/Pages/Donee.tsx"],"names":["Donee","navigate","useNavigate","userState","useSelector","state","AuthReducer","React","useState","refetch","setRefetch","axiosInstance","useAxios","useQuery","userInfo","access","a","get","response","data","isLoading","isError","error","data2","isLoading2","isError2","error2","Error","maxWidth","direction","alignItems","justifyContent","mb","sx","fontSize","fontWeight","height","color","CustomButton","variant","onClick","undefined","container","spacing","item","xs","sm","md","total_donee_count","active","total_active_count","inactive","total_inactive_count","paddingTop","paddingBottom","marginTop","doneeList","handleRefetch","styled","Button","backgroundColor","boxShadow","borderRadius","width","fontsize"],"mappings":"iUA0Be,SAASA,IACtB,IAAMC,EAAWC,cACXC,EAAYC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,eAC7D,EAA8BC,IAAMC,UAAS,GAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAgBC,cAEtB,EAKgDC,mBAC9C,CAAC,yBAA0BV,EAAUW,SAASC,OAAQN,GADA,sBAEtD,4BAAAO,EAAA,sEACyBL,EAAcM,IAAd,2BADzB,cACQC,EADR,yBAESA,EAASC,MAFlB,4CANAA,EADF,EACEA,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,QACAC,EAJF,EAIEA,MASF,EAKiDT,mBAC/C,CAAC,yBAA0BV,EAAUW,SAASC,OAAQN,GADC,sBAEvD,4BAAAO,EAAA,sEACyBL,EAAcM,IAAd,0BADzB,cACQC,EADR,yBAESA,EAASC,MAFlB,4CANMI,EADR,EACEJ,KACWK,EAFb,EAEEJ,UACSK,EAHX,EAGEJ,QACOK,EAJT,EAIEJ,MAWF,OACE,cAAC,IAAD,WACiB,IAAdF,IAAsC,IAAfI,EACtB,8BACGH,GAAWI,EACVJ,EACE,cAAC,IAAD,CACEC,MACEA,GAAgB,IAAIK,MAAM,kCAI9B,cAAC,IAAD,CACEL,MACEI,GAAkB,IAAIC,MAAM,kCAKlC,eAAC,IAAD,CAAWC,SAAS,KAApB,UACE,eAAC,IAAD,CACEC,UAAU,MACVC,WAAW,SACXC,eAAe,gBACfC,GAAI,EAJN,UAME,cAAC,IAAD,CACEC,GAAI,CACFC,SAAU,GACVC,WAAY,OACZC,OAAQ,GACRC,MAAO,WALX,oBAUA,cAACC,EAAD,CACEC,QAAQ,YACRC,QAAS,kBAAMvC,EAAS,sBAF1B,iCAQQ,OAATkB,QAA0BsB,IAATtB,GAChB,eAAC,IAAD,CAAMuB,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAMH,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,CAAYC,kBAAmB7B,EAAK6B,sBAGtC,cAAC,IAAD,CAAMJ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,CACEE,OAAQ9B,EAAK+B,mBACbC,SAAUhC,EAAKiC,4BAMvB,eAAC,IAAD,CACErB,eAAe,gBACfW,WAAS,EACTT,GAAI,CAAEoB,WAAY,EAAGC,cAAe,GAHtC,UAKE,cAAC,IAAD,CAAMV,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,CACEd,GAAI,CACFC,SAAU,GACVC,WAAY,OACZC,OAAQ,GACRC,MAAO,WALX,+BAYS,OAAVd,QAA4BkB,IAAVlB,GACjB,cAAC,IAAD,CAAMU,GAAI,CAAEsB,UAAW,GAAKX,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAArD,SACE,cAAC,IAAD,CACES,UAAWjC,EACXkC,cAtFE,kBAAM/C,GAAYD,gBA+FlC,cAAC,IAAD,MAMR,IAAM6B,EAAeoB,YAAOC,IAAPD,EAAe,iBAAO,CACzCE,gBAAiB,UACjBC,UAAW,kCACXC,aAAc,GACdC,MAAO,IACP3B,OAAQ,GACR4B,SAAU,GACV7B,WAAY,IACZE,MAAO","file":"static/js/42.9c129ea9.chunk.js","sourcesContent":["import { Grid, Container, Typography, Stack, Button } from \"@material-ui/core\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { useQuery, UseQueryResult } from \"react-query\";\r\n// components\r\nimport {\r\n  DoneOfMonth,\r\n  EndorsedDonee,\r\n  TotalDonee,\r\n  ActiveInactiveDonees,\r\n} from \"./components\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  RootAppState,\r\n  DoneesApiCountProps,\r\n  EndorsedDoneeProps,\r\n} from \"../../../../../utils/typeHelpers\";\r\nimport Loader from \"../../../../../components/Loader\";\r\nimport ErrorCatchComponent from \"../../../../../components/ErrorCatchComponent\";\r\nimport ApiErrorPage from \"../../../../Errror/ApiErrorPage\";\r\nimport useAxios from \"../../../../../utils/useAxios\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Donee() {\r\n  const navigate = useNavigate();\r\n  const userState = useSelector((state: RootAppState) => state.AuthReducer);\r\n  const [refetch, setRefetch] = React.useState(false);\r\n\r\n  const axiosInstance = useAxios();\r\n\r\n  const {\r\n    data,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n  }: UseQueryResult<DoneesApiCountProps, Error> = useQuery(\r\n    [\"doneeDashboardApiCount\", userState.userInfo.access, refetch],\r\n    async () => {\r\n      const response = await axiosInstance.get(`/dashboard/donee-count/`);\r\n      return response.data;\r\n    }\r\n  );\r\n\r\n  const {\r\n    data: data2,\r\n    isLoading: isLoading2,\r\n    isError: isError2,\r\n    error: error2,\r\n  }: UseQueryResult<EndorsedDoneeProps[], Error> = useQuery(\r\n    [\"doneeDashboardEndorsed\", userState.userInfo.access, refetch],\r\n    async () => {\r\n      const response = await axiosInstance.get(`/dashboard/donee-list/`);\r\n      return response.data;\r\n    }\r\n  );\r\n\r\n  const handleRefetch = () => setRefetch(!refetch);\r\n\r\n  return (\r\n    <ErrorCatchComponent>\r\n      {isLoading === false || isLoading2 === false ? (\r\n        <div>\r\n          {isError || isError2 ? (\r\n            isError ? (\r\n              <ApiErrorPage\r\n                error={\r\n                  error ? error : new Error(\"Network response was not ok.\")\r\n                }\r\n              />\r\n            ) : (\r\n              <ApiErrorPage\r\n                error={\r\n                  error2 ? error2 : new Error(\"Network response was not ok.\")\r\n                }\r\n              />\r\n            )\r\n          ) : (\r\n            <Container maxWidth=\"xl\">\r\n              <Stack\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                mb={5}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: 32,\r\n                    fontWeight: \"bold\",\r\n                    height: 40,\r\n                    color: \"#212529\",\r\n                  }}\r\n                >\r\n                  Donees\r\n                </Typography>\r\n                <CustomButton\r\n                  variant=\"contained\"\r\n                  onClick={() => navigate(\"../../invitedonee\")}\r\n                >\r\n                  Invite New Donee\r\n                </CustomButton>\r\n              </Stack>\r\n\r\n              {data !== null && data !== undefined && (\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <DoneOfMonth />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={2}>\r\n                    <TotalDonee total_donee_count={data.total_donee_count} />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <ActiveInactiveDonees\r\n                      active={data.total_active_count}\r\n                      inactive={data.total_inactive_count}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid\r\n                justifyContent=\"space-between\"\r\n                container\r\n                sx={{ paddingTop: 3, paddingBottom: 3 }}\r\n              >\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: 32,\r\n                      fontWeight: \"bold\",\r\n                      height: 40,\r\n                      color: \"#212529\",\r\n                    }}\r\n                  >\r\n                    Endorsed Donees\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                {data2 !== null && data2 !== undefined && (\r\n                  <Grid sx={{ marginTop: 4 }} item xs={12} sm={12} md={12}>\r\n                    <EndorsedDonee\r\n                      doneeList={data2}\r\n                      handleRefetch={handleRefetch}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Container>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </ErrorCatchComponent>\r\n  );\r\n}\r\n\r\nconst CustomButton = styled(Button)(() => ({\r\n  backgroundColor: \"#007AFF\",\r\n  boxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.15)\",\r\n  borderRadius: 22,\r\n  width: 328,\r\n  height: 45,\r\n  fontsize: 20,\r\n  fontWeight: 600,\r\n  color: \"#F8F9FA\",\r\n}));\r\n"],"sourceRoot":""}